default_platform(:ios)

platform :ios do

  before_all do
    setup_circle_ci
  end

  desc "Install Development certificates and provisioning profiles"
  lane :development_certificates do
    match(type: "development",
          readonly: true,
          git_branch: "master",
          app_identifier: "com.pillarproject.wallet",
          team_id: "J9DEY3FGPD"
        )
  end

  desc "Install Production Release certificates and provisioning profiles"
  lane :production_release_certificates do
    match(type: "appstore",
          readonly: true,
          git_branch: "master",
          app_identifier: "com.pillarproject.wallet",
          team_id: "J9DEY3FGPD"
        )
  end

  desc "Install Staging certificates and provisioning profiles"
  lane :staging_certificates do
    match(type: "appstore",
          readonly: true,
          git_branch: "develop",
          app_identifier: "com.pillarproject.wallet.staging",
          team_id: "J9DEY3FGPD"
        )
  end

  desc "Create ios simulator build"
  lane :build_ios_simulator do
  match(type: "development",
        readonly: true)
        disable_automatic_code_signing(path: "pillarwallet.xcodeproj")
        xcbuild(
              workspace: "pillarwallet.xcworkspace",
              scheme: "pillarwallet",
              configuration: "Release",
              xcargs: "-sdk iphonesimulator SYMROOT='~/pillarwallet'"
          )
  zip(path: "/Users/distiller/pillarwallet/Release-iphonesimulator/pillarwallet.app",
      output_path: "./build/pillarwallet.app.zip"
    )
  end

  desc "Upload a new build to TestFlight"
  lane :build_test_flight do
    sh "/usr/libexec/PlistBuddy -c 'Set :CFBundleVersion $CIRCLE_BUILD_NUM' ~/pillarwallet/ios/pillarwallet/Info.plist"
    match(type: "appstore",
          readonly: true,
          git_branch: "master",
          app_identifier: "com.pillarproject.wallet",
          team_id: "J9DEY3FGPD"
        )
    sh "xcodebuild -clean -workspace ../pillarwallet.xcworkspace -configuration release -scheme pillarwallet -derivedDataPath ../build"
    sh "mkdir -p ../build/pillarwallet/Payload && cp -R ../build/Build/Products/Release-iphoneos/pillarwallet.app ../build/pillarwallet/Payload && cp -R ../pillarwallet/SwiftSupport ../build/pillarwallet && rm -rf ../build/pillarwallet/Payload/pillarwallet.app/libswiftRemoteMirror.dylib && cd ../build/pillarwallet && /usr/bin/zip -r -X ../../pillarwallet.ipa *"
    sigh(force: true)
    sh "fastlane sigh resign ../pillarwallet.ipa --signing_identity 'iPhone Distribution: PILLAR PROJECT WORLDWIDE LIMITED (J9DEY3FGPD)' --provisioning_profile '../AppStore_com.pillarproject.wallet.mobileprovision'"
    commit = last_git_commit
     upload_to_testflight(changelog: commit[:message],
     skip_waiting_for_build_processing: true,
    )
  end

  desc "Upload a new staging build to TestFlight"
  lane :build_staging_test_flight do
    sh "/usr/libexec/PlistBuddy -c 'Set :CFBundleVersion 1' ~/pillarwallet/ios/pillarwallet/Info.plist"
    match(type: "appstore",
          readonly: true,
          git_branch: "develop",
          app_identifier: "com.pillarproject.wallet.staging",
          team_id: "J9DEY3FGPD"
        )
    sh "xcodebuild -workspace ../pillarwallet.xcworkspace -configuration Staging.Release -scheme Staging -derivedDataPath ../build"
    sh "mkdir -p ../build/pillarwallet/Payload && cp -R ../build/Build/Products/Release-iphoneos/pillarwallet-staging.app ../build/pillarwallet/Payload && cp -R ../pillarwallet/SwiftSupport ../build/pillarwallet && rm -rf ../build/pillarwallet/Payload/pillarwallet.app/libswiftRemoteMirror.dylib && cd ../build/pillarwallet && /usr/bin/zip -r -X ../../pillarwallet-staging.ipa *"
    sigh(force: true)
    sh "fastlane sigh resign ../pillarwallet.ipa --signing_identity 'iPhone Distribution: PILLAR PROJECT WORLDWIDE LIMITED (J9DEY3FGPD)' --provisioning_profile '../AppStore_com.pillarproject.wallet.mobileprovision'"
    commit = last_git_commit
     upload_to_testflight(changelog: commit[:message],
     skip_waiting_for_build_processing: true,
    )
  end


  desc "Upload a new build"
  lane :build_ipa do
    sh "/usr/libexec/PlistBuddy -c 'Set :CFBundleVersion $CIRCLE_BUILD_NUM' ~/pillarwallet/ios/pillarwallet/Info.plist"
    match(type: "appstore",
          readonly: true)
    sh "xcodebuild -workspace ../pillarwallet.xcworkspace -configuration release -scheme pillarwallet -derivedDataPath ../build"
    sh "mkdir -p ../build/pillarwallet/Payload && cp -R ../build/Build/Products/Release-iphoneos/pillarwallet.app ../build/pillarwallet/Payload && cp -R ../pillarwallet/SwiftSupport ../build/pillarwallet && rm -rf ../build/pillarwallet/Payload/pillarwallet.app/libswiftRemoteMirror.dylib && cd ../build/pillarwallet && /usr/bin/zip -r -X ../../pillarwallet.ipa *"
    sigh(force: true)
    sh "fastlane sigh resign ../pillarwallet.ipa --signing_identity 'iPhone Distribution: PILLAR PROJECT WORLDWIDE LIMITED (J9DEY3FGPD)' --provisioning_profile '../AppStore_com.pillarproject.wallet.mobileprovision'"
  end

  desc "Create an IPA pointing to staging"
  lane :build_staging_ipa do
    sh "/usr/libexec/PlistBuddy -c 'Set :CFBundleVersion $CIRCLE_BUILD_NUM' ~/pillarwallet/ios/pillarwallet/Info.plist"

    disable_automatic_code_signing(path: "pillarwallet.xcodeproj")

    match(type: "appstore",
          readonly: true,
          git_branch: "develop",
          app_identifier: "com.pillarproject.wallet.staging",
          team_id: "J9DEY3FGPD",
        )

    get_push_certificate(
        readonly: true,
        app_identifier: "com.pillarproject.wallet.staging",
        team_id: "J9DEY3FGPD",
      )

    sh "xcodebuild -workspace ../pillarwallet.xcworkspace -configuration Staging.Release -scheme Staging -derivedDataPath ../build -verbose "
    sh "mkdir -p ../build/pillarwallet/Payload && cp -R ../build/Build/Products/Release-iphoneos/pillarwallet-staging.app ../build/pillarwallet/Payload && cp -R ../pillarwallet/SwiftSupport ../build/pillarwallet && rm -rf ../build/pillarwallet/Payload/pillarwallet.app/libswiftRemoteMirror.dylib && cd ../build/pillarwallet && /usr/bin/zip -r -X ../../pillarwallet-staging.ipa *"
    sigh(force: true)
    sh "fastlane sigh resign ../pillarwallet-staging.ipa --signing_identity 'iPhone Distribution: PILLAR PROJECT WORLDWIDE LIMITED (J9DEY3FGPD)' --provisioning_profile '../AppStore_com.pillarproject.wallet.staging.mobileprovision'"
  end

  desc "Upload an IPA to staging app"
  lane :deploy_staging do
    sh "/usr/libexec/PlistBuddy -c 'Set :CFBundleVersion $CIRCLE_BUILD_NUM' ~/pillarwallet/ios/pillarwallet/Info.plist"

    disable_automatic_code_signing(path: "pillarwallet.xcodeproj")

    match(type: "appstore",
          readonly: true,
          git_branch: "develop",
          app_identifier: "com.pillarproject.wallet.staging",
          team_id: "J9DEY3FGPD",
        )

    get_push_certificate(
        force: true,
        app_identifier: "com.pillarproject.wallet.staging",
        team_id: "J9DEY3FGPD",
      )

    sh "xcodebuild -workspace ../pillarwallet.xcworkspace -configuration Staging.Release -scheme Staging -derivedDataPath ../build -verbose "
    sh "mkdir -p ../build/pillarwallet/Payload && cp -R ../build/Build/Products/Release-iphoneos/pillarwallet-staging.app ../build/pillarwallet/Payload && cp -R ../pillarwallet/SwiftSupport ../build/pillarwallet && rm -rf ../build/pillarwallet/Payload/pillarwallet-staging.app/libswiftRemoteMirror.dylib && cd ../build/pillarwallet && /usr/bin/zip -r -X ../../pillarwallet-staging.ipa *"
    sigh(
      app_identifier: "com.pillarproject.wallet.staging",
      force: true
    )
    sh "fastlane sigh resign ../pillarwallet-staging.ipa --signing_identity 'iPhone Distribution: PILLAR PROJECT WORLDWIDE LIMITED (J9DEY3FGPD)' --provisioning_profile '../AppStore_com.pillarproject.wallet.staging.mobileprovision'"

    commit = last_git_commit
    upload_to_testflight(changelog: commit[:message],
     skip_waiting_for_build_processing: true,
    )

  end

end
