name: Create PR on schedule
on:
  schedule:
    - cron: '0 14 * * WED'
jobs:
  get_day:
    name: Conditional check of days
    runs-on: ubuntu-latest
    outputs:
      open-pr: ${{ steps.get_current_day.outputs.open-pr }}
    steps:
      - name: Get current day and week
        id: get_current_day
        run: |
          currentday=$(date '+%d' | sed "s/^0*//g")
          echo "Today is $currentday day of the month"
          currentweek=$(date '+%V' | sed "s/^0*//g")
          echo "This is $currentweek week of the year"
          if [ `echo "$currentweek % 2" | bc` -eq 1 ]
          then
            echo "This is an odd week of a year. Let's create PR!"
            echo '::set-output name=open-pr::green'
          else
            echo "This is an even week of a year. No PR this week!"
            echo '::set-output name=open-pr::red'
          fi
  create_pr:
    name: Create PR
    needs: [get_day]
    if: "contains(needs.get_day.outputs.open-pr, 'green')"
    runs-on: ubuntu-latest
    steps:
      - name: Get Milestone info
        run: |
          sudo apt-get update
          sudo apt-get install jq -y
          echo "MILESTONE_TITLE=$(curl https://api.github.com/repos/pillarwallet/pillarwallet/milestones | jq -r '.[] .title')" >> $GITHUB_ENV
      - name: Checkout the Repo
        uses: actions/checkout@v2
      - name: pull-request
        id: open-pr
        uses: repo-sync/pull-request@65194d8015be7624d231796ddee1cd52a5023cb3
        with:
          source_branch: "develop"
          destination_branch: "master"
          pr_title: $MILESTONE_TITLE
          pr_body: ":rocket:  $MILESTONE_TITLE"
          pr_reviewer: ${{ secrets.PR_REVIEWERS }}
          pr_assignee: ${{ secrets.PR_ASSIGNEE }}
          pr_draft: false
          pr_allow_empty: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: output-url
        run: |
          echo "PR_URL=${{steps.open-pr.outputs.pr_url}}" >> $GITHUB_ENV && echo "PR_NUMBER=${{steps.open-pr.outputs.pr_number}}" >> $GITHUB_ENV
          echo "HAS_CHANGES=${{steps.open-pr.outputs.has_changed_files}}" >> $GITHUB_ENV
      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          echo "PR url: $PR_URL" 
          echo "PR number: $PR_NUMBER"
          echo "Milestone title: $MILESTONE_TITLE"
          echo "New commits in develop branch: $HAS_CHANGES"

          if [ $HAS_CHANGES = false ]
          then
            curl -X POST -d '{"text":"'"Pull Request can't be created, there are no new commits in develop branch!"'"}' $SLACK_WEBHOOK
          elif [[ -z $MILESTONE_TITLE || $MILESTONE_TITLE = "null" ]]
          then
            curl -X POST -d '{"text":"'"Pull Request can't be created, no milestone title found!"'"}' $SLACK_WEBHOOK
          elif [ ! -z $PR_URL ]
          then
            curl -X POST -d '{"text":"'"Pull Request #$PR_NUMBER for new $MILESTONE_TITLE is created! $PR_URL "'"}' $SLACK_WEBHOOK
          else 
            curl -X POST -d '{"text":"'"Pull Request for $MILESTONE_TITLE is updated! $PR_URL "'"}' $SLACK_WEBHOOK
          fi
