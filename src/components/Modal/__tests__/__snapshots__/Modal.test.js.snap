// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal opens a modal 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  onSwipeComplete={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeDirection="down"
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0.7,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Array [
          Object {
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "margin": 0,
          },
          Object {
            "margin": 0,
          },
        ],
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onSwipeComplete={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "left": 0,
          "margin": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
    >
      <View
        forwardedRef={[Function]}
        onLayout={[Function]}
        pointerEvents="box-none"
        statusBarHeight={null}
        style={
          Object {
            "left": 0,
            "marginTop": 40,
            "paddingBottom": 0,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
            "zIndex": 1000,
          }
        }
      >
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Modal opens multiple modals 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  onSwipeComplete={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeDirection="down"
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0.7,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Array [
          Object {
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
          Object {
            "flex": 1,
            "justifyContent": "center",
          },
          Object {
            "margin": 0,
          },
          Object {
            "margin": 0,
          },
        ],
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onSwipeComplete={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "left": 0,
          "margin": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
    >
      <View
        forwardedRef={[Function]}
        onLayout={[Function]}
        pointerEvents="box-none"
        statusBarHeight={null}
        style={
          Object {
            "left": 0,
            "marginTop": 40,
            "paddingBottom": 0,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
            "zIndex": 1000,
          }
        }
      >
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onRequestClose={[Function]}
        onSwipeComplete={[Function]}
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeDirection="down"
        swipeThreshold={100}
        transparent={true}
        visible={true}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0.7,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
        />
        <View
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Array [
                Object {
                  "margin": 37.5,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                },
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                },
                Object {
                  "margin": 0,
                },
                Object {
                  "margin": 0,
                },
              ],
              Object {
                "paddingBottom": 0,
              },
            ]
          }
        >
          <View
            forwardedRef={[Function]}
            hideModalContentWhileAnimating={false}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            onSwipeComplete={[Function]}
            pointerEvents="box-none"
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
                "left": 0,
                "margin": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeDirection="down"
            swipeThreshold={100}
          >
            <View
              forwardedRef={[Function]}
              onLayout={[Function]}
              pointerEvents="box-none"
              statusBarHeight={null}
              style={
                Object {
                  "left": 0,
                  "marginTop": 40,
                  "paddingBottom": 0,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                  "zIndex": 1000,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 0,
                  }
                }
              />
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
</Modal>
`;
