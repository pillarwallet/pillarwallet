// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Slide Modal should render SlideModal correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onRequestClose={[Function]}
  onSwipe={[Function]}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={[Function]}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeDirection="down"
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#000000",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onSwipe={[Function]}
    pointerEvents="box-none"
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={[Function]}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "left": 0,
        "margin": 0,
        "position": "relative",
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
        "zIndex": 10,
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        bgColor="#f5f5f5"
        style={
          Array [
            Object {
              "height": "100%",
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "height": "100%",
                "width": "100%",
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fafafa",
                "borderTopLeftRadius": 30,
                "borderTopRightRadius": 30,
                "elevation": 1,
                "marginTop": "auto",
                "paddingBottom": 0,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 0,
                "shadowColor": "rgba(0,0,0,.1)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 7,
              },
              undefined,
            ]
          }
          theme={
            Object {
              "background": "#fafafa",
              "borderRadius": "30px",
              "padding": "0 20px",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              noMargin={true}
              noPadding={true}
              style={
                Array [
                  Object {
                    "alignItems": "flex-end",
                    "borderBottomWidth": 0,
                    "flexDirection": "row",
                    "height": 48,
                    "justifyContent": "flex-end",
                    "marginBottom": 0,
                    "marginTop": 20,
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                    "zIndex": 10,
                  },
                  undefined,
                ]
              }
            >
              <View
                showTitleLeft={true}
                style={
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "alignSelf": "center",
                      "flex": 1,
                    },
                    Object {
                      "alignItems": "flex-end",
                      "flexBasis": 0,
                      "flexGrow": 2,
                      "flexShrink": 1,
                      "justifyContent": "flex-start",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  noMargin={true}
                  style={
                    Array [
                      Object {
                        "alignSelf": "flex-start",
                        "marginBottom": 0,
                        "marginLeft": 0,
                        "marginRight": 0,
                        "marginTop": 0,
                        "position": "relative",
                        "top": 0,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    ellipsizeMode="middle"
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#0A1427",
                          "fontFamily": "Aktiv Grotesk App",
                          "fontWeight": "400",
                          "includeFontPadding": false,
                          "textAlignVertical": "center",
                        },
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "Aktiv Grotesk App",
                            "fontWeight": "600",
                            "includeFontPadding": false,
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "fontSize": 22,
                              "fontWeight": "700",
                              "lineHeight": 28,
                              "maxWidth": 230,
                            },
                            Object {},
                          ],
                        ],
                      ]
                    }
                  >
                    title
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "Aktiv Grotesk App",
                            "fontWeight": "400",
                            "includeFontPadding": false,
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "color": "#0A1427",
                              "fontFamily": "Aktiv Grotesk App",
                              "fontWeight": "600",
                              "includeFontPadding": false,
                              "textAlignVertical": "center",
                            },
                            Array [
                              Object {
                                "color": "#00bfff",
                                "fontSize": 30,
                              },
                              undefined,
                            ],
                          ],
                        ]
                      }
                    >
                      .
                    </Text>
                  </Text>
                </View>
              </View>
              <View
                flex={[Function]}
                onClose={[Function]}
                style={
                  Array [
                    Object {
                      "alignItems": "flex-end",
                      "alignSelf": "center",
                      "flex": 1,
                    },
                    Object {
                      "alignItems": "flex-end",
                      "flexBasis": 44,
                      "flexGrow": 0,
                      "flexShrink": 0,
                      "justifyContent": "flex-end",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "flex-end",
                        "height": 44,
                        "justifyContent": "center",
                        "marginRight": -20,
                        "opacity": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 20,
                        "paddingTop": 0,
                        "width": 64,
                      }
                    }
                  >
                    <View
                      name="close"
                      style={
                        Object {
                          "color": "#0A1427",
                          "fontSize": 16,
                          "marginBottom": undefined,
                          "marginLeft": undefined,
                          "marginRight": undefined,
                          "marginTop": undefined,
                          "paddingTop": 0,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#ffffff",
                  "height": 100,
                  "marginBottom": -100,
                  "width": "100%",
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
      <View
        borderColor="#2f86eb"
        opacity={0}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffffff",
              "borderColor": "#2f86eb",
              "borderLeftWidth": 10,
              "borderStyle": "solid",
              "elevation": 9,
              "justifyContent": "center",
              "left": 0,
              "opacity": 0,
              "paddingBottom": 10,
              "paddingTop": 30,
              "position": "absolute",
              "shadowColor": "#333",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.25,
              "shadowRadius": 10,
              "top": 0,
              "width": "100%",
              "zIndex": 1000,
            },
            Object {
              "transform": Array [
                Object {
                  "translateY": -260,
                },
              ],
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexGrow": 2,
                  "flexShrink": 1,
                  "justifyContent": "center",
                  "paddingTop": 2,
                },
                undefined,
              ]
            }
          >
            <View
              name="info-circle"
              style={
                Object {
                  "color": "#2f86eb",
                  "fontSize": 24,
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                  "flexBasis": 0,
                  "flexGrow": 9,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#0A1427",
                    "fontFamily": "Aktiv Grotesk App",
                    "fontWeight": "400",
                    "includeFontPadding": false,
                    "textAlignVertical": "center",
                  },
                  Object {
                    "color": "#8B939E",
                  },
                ]
              }
            >
              
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "stretch",
                "display": "flex",
                "flex": 2,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            <View
              name="close"
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "borderWidth": 0,
                  "color": "#C6CACD",
                  "fontSize": undefined,
                  "justifyContent": "center",
                  "marginBottom": undefined,
                  "marginLeft": undefined,
                  "marginRight": undefined,
                  "marginTop": undefined,
                  "paddingTop": 0,
                  "textAlign": "center",
                  "width": 32,
                }
              }
            />
          </View>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0.4)",
              "flex": 1,
              "justifyContent": "flex-end",
              "opacity": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "elevation": 4,
                "height": NaN,
                "maxHeight": 667,
                "minHeight": 56,
                "opacity": 1,
                "padding": 15,
              }
            }
          >
            <RCTScrollView
              data={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              style={
                Object {
                  "marginHorizontal": -15,
                  "marginTop": 0,
                }
              }
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <View />
            </RCTScrollView>
          </View>
        </View>
      </Modal>
    </View>
  </View>
</Modal>
`;
