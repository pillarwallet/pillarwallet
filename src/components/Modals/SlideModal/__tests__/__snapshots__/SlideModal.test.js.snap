// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Slide Modal should render SlideModal correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  onSwipeComplete={[Function]}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={[Function]}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeDirection="down"
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#000000",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onSwipeComplete={[Function]}
    pointerEvents="box-none"
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={[Function]}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "left": 0,
        "margin": 0,
        "position": "relative",
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
        "zIndex": 10,
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        bgColor="#FAFAFA"
        style={
          Array [
            Object {
              "height": "100%",
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "height": "100%",
                "width": "100%",
              },
              undefined,
            ]
          }
        />
        <View
          customTheme={
            Object {
              "borderRadius": "30px",
              "padding": "0 16px",
            }
          }
          onLayout={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
                "borderTopLeftRadius": 30,
                "borderTopRightRadius": 30,
                "elevation": 1,
                "marginHorizontal": 0,
                "marginTop": "auto",
                "overflow": "hidden",
                "paddingBottom": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 0,
                "shadowColor": "rgba(0,0,0,.1)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 7,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "borderBottomWidth": 1,
                "borderColor": "transparent",
                "width": "100%",
              }
            }
          >
            <View
              androidStatusbarHeight={42}
              noPaddingTop={true}
              onLayout={[Function]}
              pointerEvents="box-none"
              style={
                Object {
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 0,
                }
              }
            >
              <View
                noHorizontalPadding={true}
                style={
                  Array [
                    Object {
                      "height": 58,
                      "paddingVertical": 10,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "width": "100%",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    sideFlex={4}
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexBasis": 0,
                          "flexDirection": "row",
                          "flexGrow": 4,
                          "flexShrink": 1,
                          "height": 36,
                          "justifyContent": "flex-start",
                        },
                        Object {},
                      ]
                    }
                  >
                    <View
                      style={Object {}}
                    >
                      <Text
                        centerText={false}
                        ellipsizeMode="tail"
                        numberOfLines={2}
                        style={
                          Array [
                            Object {
                              "color": "#0A1427",
                              "fontFamily": "EuclidCircularB-Regular",
                              "textAlignVertical": "center",
                            },
                            Array [
                              Object {
                                "color": "#0A1427",
                                "fontFamily": "EuclidCircularB-Medium",
                                "textAlignVertical": "center",
                              },
                              Array [
                                Object {
                                  "color": "#0A1427",
                                  "fontSize": 16,
                                  "lineHeight": 20,
                                  "textAlign": "left",
                                },
                                Object {},
                              ],
                            ],
                          ]
                        }
                      >
                        title
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignContent": "center",
                          "alignItems": "center",
                          "flexBasis": 0,
                          "flexDirection": "row",
                          "flexGrow": 1,
                          "flexShrink": 1,
                          "flexWrap": "wrap",
                          "height": 36,
                          "justifyContent": "flex-end",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "marginBottom": -20,
                          "marginLeft": -12,
                          "marginRight": -20,
                          "marginTop": -20,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        isTVSelectable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "alignItems": "flex-end",
                            "alignSelf": "center",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 20,
                            "paddingLeft": 20,
                            "paddingRight": 20,
                            "paddingTop": 20,
                            "position": "relative",
                          }
                        }
                      >
                        <View
                          name="close"
                          style={
                            Object {
                              "color": "#0A1427",
                              "fontSize": 14,
                              "marginBottom": undefined,
                              "marginLeft": undefined,
                              "marginRight": undefined,
                              "marginTop": undefined,
                              "paddingTop": 0,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "column",
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "height": 100,
                  "marginBottom": -100,
                  "width": "100%",
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        statusBarHeight={42}
        style={
          Object {
            "left": 0,
            "marginTop": 82,
            "paddingBottom": 0,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
            "position": "absolute",
            "top": 0,
            "width": "100%",
            "zIndex": 1000,
          }
        }
      >
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0.4)",
              "flex": 1,
              "justifyContent": "flex-end",
              "opacity": 1,
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "elevation": 4,
                "maxHeight": 667,
                "minHeight": 56,
                "opacity": 1,
                "padding": 15,
              }
            }
          >
            <RCTScrollView
              data={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              style={
                Array [
                  Object {
                    "marginHorizontal": -15,
                  },
                  Object {
                    "marginTop": 0,
                  },
                ]
              }
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <View />
            </RCTScrollView>
          </View>
        </View>
      </Modal>
    </View>
  </View>
</Modal>
`;
