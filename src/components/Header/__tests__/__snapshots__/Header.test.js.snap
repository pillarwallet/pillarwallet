// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Header should render Header correctly 1`] = `
<View
  style={
    {
      "borderBottomWidth": 0,
      "paddingBottom": 0,
      "paddingLeft": 16,
      "paddingRight": 16,
      "paddingTop": 0,
      "zIndex": 10,
    }
  }
>
  <View
    style={
      {
        "alignItems": "flex-end",
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "flex-end",
        "marginBottom": 4,
        "marginTop": 20,
      }
    }
  >
    <View
      flex={1}
      showTitleLeft={false}
      style={
        {
          "alignItems": "flex-end",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "flex-start",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "flex-start",
            "alignSelf": "flex-start",
            "height": 44,
            "justifyContent": "center",
            "marginLeft": -10,
            "opacity": 1,
            "paddingBottom": 0,
            "paddingLeft": 10,
            "paddingRight": 0,
            "paddingTop": 0,
            "position": "relative",
            "width": 44,
          }
        }
      >
        <View
          name="back"
          style={
            [
              {
                "color": "#CCCCCC",
                "fontSize": 24,
                "marginBottom": undefined,
                "marginLeft": undefined,
                "marginRight": undefined,
                "marginTop": undefined,
                "paddingTop": 0,
              },
              {},
            ]
          }
        />
      </View>
    </View>
    <View
      flex={1}
      onClose={[Function]}
      style={
        {
          "alignItems": "flex-end",
          "flexBasis": 0,
          "flexDirection": "row",
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "flex-end",
        }
      }
    />
  </View>
</View>
`;
