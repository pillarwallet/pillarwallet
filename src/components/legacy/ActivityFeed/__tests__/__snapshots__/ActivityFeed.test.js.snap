// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`ActivityFeed does not fail for invalid values 1`] = `
<View
  style={
    {
      "flexBasis": 0,
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      [
        {},
        undefined,
      ]
    }
    data={
      [
        {
          "component": undefined,
          "type": "HEADER",
        },
        {
          "component": undefined,
          "type": "TABS",
        },
        {
          "section": {
            "title": "Sep 9 2019",
          },
          "type": "SECTION",
        },
        {
          "item": {
            "createdAt": 1568030400,
            "from": "0x0000000000000000000000000000000000000000",
            "to": "0x0000000000000000000000000000000000000000",
            "type": "transactionEvent",
            "value": undefined,
          },
          "type": "ITEM",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    initialNumToRender={7}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={0.5}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={
      [
        1,
      ]
    }
    style={
      {
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "width": "100%",
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      />
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      />
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={{}}
        >
          <View
            style={
              {
                "paddingBottom": 8,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 8,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#0A1427",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontSize": 14,
                  "lineHeight": 22,
                  "textAlignVertical": "center",
                }
              }
            >
              Sep 9 2019
            </Text>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={{}}
        >
          <View
            style={
              {
                "flexDirection": "column",
                "width": "100%",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 14,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 14,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  backgroundColor={null}
                  diameter={48}
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#EBF0F6",
                      "borderBottomLeftRadius": 24,
                      "borderBottomRightRadius": 24,
                      "borderColor": "#EBF0F6",
                      "borderTopLeftRadius": 24,
                      "borderTopRightRadius": 24,
                      "borderWidth": 0,
                      "height": 48,
                      "justifyContent": "center",
                      "overflow": "hidden",
                      "textAlign": "center",
                      "width": 48,
                    }
                  }
                >
                  <View
                    name="sent"
                    style={
                      {
                        "color": "#BD573A",
                        "fontSize": 48,
                      }
                    }
                  />
                </View>
              </View>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                      "width": "100%",
                    }
                  }
                  type="ACTION"
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "flex-start",
                          "flexBasis": 0,
                          "flexDirection": "column",
                          "flexGrow": 1,
                          "flexShrink": 1,
                          "justifyContent": "center",
                          "minHeight": 54,
                        },
                        {
                          "flexGrow": 1,
                        },
                      ]
                    }
                    type="ACTION"
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <Text
                        ellipsizeMode="tail"
                        numberOfLines={2}
                        style={
                          {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Medium",
                            "fontSize": 18,
                            "lineHeight": 28,
                            "textAlignVertical": "center",
                            "width": "100%",
                          }
                        }
                        type="ACTION"
                      >
                        ellipsedMiddleString
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      [
                        {
                          "alignItems": "flex-end",
                          "flexDirection": "column",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "minHeight": 54,
                        },
                        {
                          "maxWidth": "50%",
                        },
                      ]
                    }
                    type="ACTION"
                  >
                    <View
                      style={
                        [
                          undefined,
                          {
                            "flexWrap": "wrap",
                          },
                        ]
                      }
                    >
                      <View
                        horizontal={true}
                        style={
                          [
                            {
                              "flexDirection": "row",
                              "marginBottom": 0,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "marginTop": 0,
                            },
                            {
                              "alignItems": "center",
                              "flexWrap": "wrap",
                              "justifyContent": "flex-end",
                            },
                          ]
                        }
                      >
                        <Text
                          color="#0A1427"
                          ellipsizeMode="tail"
                          numberOfLines={2}
                          style={
                            {
                              "color": "#0A1427",
                              "fontFamily": "EuclidCircularB-Regular",
                              "fontSize": 18,
                              "lineHeight": 28,
                              "textAlign": "right",
                              "textAlignVertical": "center",
                            }
                          }
                        >
                          tokenValue
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`ActivityFeed renders the Asset correctly 1`] = `
<View
  style={
    {
      "flexBasis": 0,
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      [
        {},
        undefined,
      ]
    }
    data={
      [
        {
          "component": undefined,
          "type": "HEADER",
        },
        {
          "component": undefined,
          "type": "TABS",
        },
        {
          "section": {
            "title": "Sep 9 2019",
          },
          "type": "SECTION",
        },
        {
          "item": {
            "createdAt": 1568030400,
            "from": "0x0000000000000000000000000000000000000000",
            "to": "0x0000000000000000000000000000000000000000",
            "type": "transactionEvent",
            "value": "0",
          },
          "type": "ITEM",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    initialNumToRender={7}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={0.5}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={
      [
        1,
      ]
    }
    style={
      {
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "width": "100%",
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      />
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      />
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={{}}
        >
          <View
            style={
              {
                "paddingBottom": 8,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 8,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#0A1427",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontSize": 14,
                  "lineHeight": 22,
                  "textAlignVertical": "center",
                }
              }
            >
              Sep 9 2019
            </Text>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={{}}
        >
          <View
            style={
              {
                "flexDirection": "column",
                "width": "100%",
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 14,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 14,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "paddingRight": 12,
                  }
                }
              >
                <View
                  backgroundColor={null}
                  diameter={48}
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#EBF0F6",
                      "borderBottomLeftRadius": 24,
                      "borderBottomRightRadius": 24,
                      "borderColor": "#EBF0F6",
                      "borderTopLeftRadius": 24,
                      "borderTopRightRadius": 24,
                      "borderWidth": 0,
                      "height": 48,
                      "justifyContent": "center",
                      "overflow": "hidden",
                      "textAlign": "center",
                      "width": 48,
                    }
                  }
                >
                  <View
                    name="sent"
                    style={
                      {
                        "color": "#BD573A",
                        "fontSize": 48,
                      }
                    }
                  />
                </View>
              </View>
              <View
                style={
                  {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                      "width": "100%",
                    }
                  }
                  type="ACTION"
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "flex-start",
                          "flexBasis": 0,
                          "flexDirection": "column",
                          "flexGrow": 1,
                          "flexShrink": 1,
                          "justifyContent": "center",
                          "minHeight": 54,
                        },
                        {
                          "flexGrow": 1,
                        },
                      ]
                    }
                    type="ACTION"
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <Text
                        ellipsizeMode="tail"
                        numberOfLines={2}
                        style={
                          {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Medium",
                            "fontSize": 18,
                            "lineHeight": 28,
                            "textAlignVertical": "center",
                            "width": "100%",
                          }
                        }
                        type="ACTION"
                      >
                        ellipsedMiddleString
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      [
                        {
                          "alignItems": "flex-end",
                          "flexDirection": "column",
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "minHeight": 54,
                        },
                        {
                          "maxWidth": "50%",
                        },
                      ]
                    }
                    type="ACTION"
                  >
                    <View
                      style={
                        [
                          undefined,
                          {
                            "flexWrap": "wrap",
                          },
                        ]
                      }
                    >
                      <View
                        horizontal={true}
                        style={
                          [
                            {
                              "flexDirection": "row",
                              "marginBottom": 0,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "marginTop": 0,
                            },
                            {
                              "alignItems": "center",
                              "flexWrap": "wrap",
                              "justifyContent": "flex-end",
                            },
                          ]
                        }
                      >
                        <Text
                          color="#0A1427"
                          ellipsizeMode="tail"
                          numberOfLines={2}
                          style={
                            {
                              "color": "#0A1427",
                              "fontFamily": "EuclidCircularB-Regular",
                              "fontSize": 18,
                              "lineHeight": 28,
                              "textAlign": "right",
                              "textAlignVertical": "center",
                            }
                          }
                        >
                          tokenValue
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
