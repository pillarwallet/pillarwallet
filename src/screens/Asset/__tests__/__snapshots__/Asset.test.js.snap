// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Asset renders the Asset Screen correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderBottomColor": "#EDEDED",
          "borderBottomWidth": 1,
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <View
      androidStatusbarHeight={42}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "marginTop": 42,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 20,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "minHeight": 58,
              "paddingHorizontal": 16,
              "paddingVertical": 15,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "justifyContent": "flex-start",
                  "minHeight": 28,
                },
                Object {},
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "flex-start",
                  "height": 34,
                  "justifyContent": "center",
                  "marginLeft": -12,
                  "opacity": 1,
                  "paddingBottom": 0,
                  "paddingLeft": 10,
                  "paddingRight": 0,
                  "paddingTop": 0,
                  "position": "relative",
                  "width": 44,
                }
              }
            >
              <View
                name="back"
                style={
                  Object {
                    "color": "#0A1427",
                    "fontSize": 24,
                    "marginBottom": undefined,
                    "marginLeft": undefined,
                    "marginRight": undefined,
                    "marginTop": undefined,
                    "paddingTop": 0,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 4,
                  "flexShrink": 1,
                  "justifyContent": "center",
                  "minHeight": 28,
                  "paddingBottom": 0,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 0,
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "justifyContent": "flex-end",
                  "minHeight": 28,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "marginLeft": 8,
                  "marginRight": -10,
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "center",
                    "height": 34,
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 5,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 5,
                    "position": "relative",
                    "width": 44,
                  }
                }
              >
                <View
                  name="info-circle-inverse"
                  style={
                    Object {
                      "color": "#0A1427",
                      "fontSize": 24,
                      "marginBottom": undefined,
                      "marginLeft": undefined,
                      "marginRight": undefined,
                      "marginTop": undefined,
                      "paddingTop": 0,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    androidStatusbarHeight={0}
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Object {
        "backgroundColor": "#FAFAFA",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={true}
      enableResetScrollToCoords={true}
      extraHeight={0}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardSpace={0}
      onScroll={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      resetKeyboardSpace={[Function]}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "height": "100%",
          "paddingHorizontal": 0,
        }
      }
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            Array [
              Object {
                "height": 250,
                "justifyContent": "center",
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 220,
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              addShadow={false}
              borderRadius={54}
              diameter={108}
              elevation={6}
              isListed={true}
              left={375}
              shadowOpacity={0.15}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 108,
                    "justifyContent": "center",
                    "left": 375,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 125.5,
                    "width": 108,
                    "zIndex": 3,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -54,
                      },
                      Object {
                        "translateY": -54,
                      },
                    ],
                  },
                ]
              }
              top={125.5}
              zIndex={3}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 104,
                      "opacity": 1,
                      "width": 104,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
            <View
              addShadow={false}
              borderRadius={35}
              diameter={70}
              elevation={0}
              isListed={true}
              left={266.2}
              shadowOpacity={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 70,
                    "justifyContent": "center",
                    "left": 266.2,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 65.5,
                    "width": 70,
                    "zIndex": 1,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -35,
                      },
                      Object {
                        "translateY": -35,
                      },
                    ],
                  },
                ]
              }
              top={65.5}
              zIndex={1}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    0.6065,
                    0.3575,
                    0.036,
                    0,
                    0,
                    0.1065,
                    0.8574999999999999,
                    0.036,
                    0,
                    0,
                    0.1065,
                    0.3575,
                    0.536,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 66,
                      "opacity": 0.15,
                      "width": 66,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
            <View
              addShadow={false}
              borderRadius={45}
              diameter={90}
              elevation={4}
              isListed={true}
              left={310.33333333333337}
              shadowOpacity={0.05}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 90,
                    "justifyContent": "center",
                    "left": 310.33333333333337,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 104.5,
                    "width": 90,
                    "zIndex": 2,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -45,
                      },
                      Object {
                        "translateY": -45,
                      },
                    ],
                  },
                ]
              }
              top={104.5}
              zIndex={2}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    0.7638999999999999,
                    0.21450000000000002,
                    0.0216,
                    0,
                    0,
                    0.06390000000000001,
                    0.9145,
                    0.0216,
                    0,
                    0,
                    0.06390000000000001,
                    0.21450000000000002,
                    0.7215999999999999,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 86,
                      "opacity": 0.3,
                      "width": 86,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
            <View
              addShadow={false}
              borderRadius={45}
              diameter={90}
              elevation={4}
              isListed={true}
              left={439.66666666666663}
              shadowOpacity={0.05}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 90,
                    "justifyContent": "center",
                    "left": 439.66666666666663,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 104.5,
                    "width": 90,
                    "zIndex": 2,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -45,
                      },
                      Object {
                        "translateY": -45,
                      },
                    ],
                  },
                ]
              }
              top={104.5}
              zIndex={2}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    0.7638999999999999,
                    0.21450000000000002,
                    0.0216,
                    0,
                    0,
                    0.06390000000000001,
                    0.9145,
                    0.0216,
                    0,
                    0,
                    0.06390000000000001,
                    0.21450000000000002,
                    0.7215999999999999,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 86,
                      "opacity": 0.3,
                      "width": 86,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
            <View
              addShadow={false}
              borderRadius={35}
              diameter={70}
              elevation={0}
              isListed={true}
              left={483.8}
              shadowOpacity={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 70,
                    "justifyContent": "center",
                    "left": 483.8,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 65.5,
                    "width": 70,
                    "zIndex": 1,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -35,
                      },
                      Object {
                        "translateY": -35,
                      },
                    ],
                  },
                ]
              }
              top={65.5}
              zIndex={1}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    0.6065,
                    0.3575,
                    0.036,
                    0,
                    0,
                    0.1065,
                    0.8574999999999999,
                    0.036,
                    0,
                    0,
                    0.1065,
                    0.3575,
                    0.536,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 66,
                      "opacity": 0.15,
                      "width": 66,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginBottom": 20,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 0,
                "paddingBottom": 8,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              isSynthetic={false}
              style={
                Array [
                  Object {
                    "color": "#0A1427",
                    "fontFamily": "EuclidCircularB-Regular",
                    "textAlignVertical": "center",
                  },
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontFamily": "EuclidCircularB-Medium",
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {
                        "color": "#0A1427",
                        "fontSize": 36,
                        "lineHeight": 54,
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ],
                ]
              }
            >
              0 PLR
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#0A1427",
                    "fontFamily": "EuclidCircularB-Regular",
                    "textAlignVertical": "center",
                  },
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontSize": 12,
                      "lineHeight": 18,
                      "textAlign": "center",
                    },
                    undefined,
                  ],
                ]
              }
            >
              £ 0
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "borderBottomWidth": 1,
                "borderColor": "#EDEDED",
                "borderTopWidth": 1,
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
                "marginTop": 4,
                "paddingBottom": 30,
                "paddingTop": 10,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "paddingBottom": 0,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 0,
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 0,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 8,
                }
              }
            >
              <View
                accessibilityIgnoresInvertColors={true}
                style={
                  Object {
                    "height": 92,
                    "width": 92,
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/assets/images/bg_action_button.png",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "height": 92,
                        "width": 92,
                      },
                      undefined,
                    ]
                  }
                />
                <View
                  colors={
                    Array [
                      "#ffffff",
                      "#f2f4f9",
                    ]
                  }
                  disabled={false}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 46,
                        "display": "flex",
                        "flexDirection": "row",
                        "height": 92,
                        "justifyContent": "center",
                        "width": 92,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    name="qrDetailed"
                    style={
                      Object {
                        "alignSelf": "center",
                        "color": "#007AFF",
                        "fontSize": 22,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
              <Text
                disabled={false}
                style={
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontFamily": "EuclidCircularB-Regular",
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 16,
                        "letterSpacing": 0.1,
                        "marginTop": -6,
                        "opacity": 1,
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Receive
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 0,
                  "paddingLeft": 4,
                  "paddingRight": 4,
                  "paddingTop": 8,
                }
              }
            >
              <View
                accessibilityIgnoresInvertColors={true}
                style={
                  Object {
                    "height": 92,
                    "width": 92,
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/assets/images/bg_action_button_disabled.png",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "height": 92,
                        "width": 92,
                      },
                      undefined,
                    ]
                  }
                />
                <View
                  colors={
                    Array [
                      "#ffffff",
                      "#f2f4f9",
                    ]
                  }
                  disabled={true}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 46,
                        "display": "flex",
                        "flexDirection": "row",
                        "height": 92,
                        "justifyContent": "center",
                        "width": 92,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    name="paperPlane"
                    style={
                      Object {
                        "alignSelf": "center",
                        "color": "#007AFF",
                        "fontSize": 22,
                        "opacity": 0.5,
                      }
                    }
                  />
                </View>
              </View>
              <Text
                disabled={true}
                style={
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontFamily": "EuclidCircularB-Regular",
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {
                        "color": "#8B939E",
                        "fontSize": 16,
                        "letterSpacing": 0.1,
                        "marginTop": -6,
                        "opacity": 1,
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Send
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      onSwipeComplete={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onSwipeComplete={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={[Function]}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "left": 0,
            "margin": 0,
            "position": "relative",
            "top": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 10,
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeDirection="down"
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            bgColor="#FAFAFA"
            style={
              Array [
                Object {
                  "height": "100%",
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            />
            <View
              customTheme={
                Object {
                  "borderRadius": "30px",
                  "padding": 0,
                }
              }
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderTopLeftRadius": 30,
                    "borderTopRightRadius": 30,
                    "elevation": 1,
                    "marginHorizontal": 0,
                    "marginTop": "auto",
                    "overflow": "hidden",
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                    "shadowColor": "rgba(0,0,0,.1)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 7,
                  },
                  undefined,
                ]
              }
            >
              <View
                noBottomBorder={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FAFAFA",
                      "width": "100%",
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ]
                }
              >
                <View
                  androidStatusbarHeight={42}
                  noPaddingTop={true}
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    noHorizonatalPadding={false}
                    style={
                      Array [
                        Object {
                          "minHeight": 58,
                          "paddingHorizontal": 16,
                          "paddingVertical": 15,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "width": "100%",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        sideFlex={4}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexBasis": 0,
                              "flexDirection": "row",
                              "flexGrow": 4,
                              "flexShrink": 1,
                              "flexWrap": "wrap",
                              "justifyContent": "flex-start",
                              "minHeight": 28,
                            },
                            Object {},
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                              "flexWrap": "wrap",
                            }
                          }
                        >
                          <Text
                            centerText={false}
                            style={
                              Array [
                                Object {
                                  "color": "#0A1427",
                                  "fontFamily": "EuclidCircularB-Regular",
                                  "textAlignVertical": "center",
                                },
                                Array [
                                  Object {
                                    "color": "#0A1427",
                                    "fontFamily": "EuclidCircularB-Medium",
                                    "textAlignVertical": "center",
                                  },
                                  Array [
                                    Object {
                                      "color": "#0A1427",
                                      "fontSize": 16,
                                      "lineHeight": 26,
                                      "textAlign": "left",
                                    },
                                    Object {},
                                  ],
                                ],
                              ]
                            }
                          >
                            Receive
                          </Text>
                        </View>
                        <View
                          style={Object {}}
                        >
                          <View
                            containerStyle={
                              Object {
                                "marginLeft": 8,
                              }
                            }
                            label="ERC-20 tokens only"
                            labelStyle={
                              Object {
                                "fontSize": 10,
                              }
                            }
                            primary={true}
                            style={
                              Array [
                                Object {
                                  "alignSelf": "flex-start",
                                  "backgroundColor": "#007AFF",
                                  "borderRadius": 12,
                                  "paddingBottom": 3,
                                  "paddingLeft": 8,
                                  "paddingRight": 8,
                                  "paddingTop": 3,
                                },
                                Object {
                                  "marginLeft": 8,
                                },
                              ]
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#0A1427",
                                    "fontFamily": "EuclidCircularB-Regular",
                                    "textAlignVertical": "center",
                                  },
                                  Array [
                                    Object {
                                      "color": "#0A1427",
                                      "fontFamily": "EuclidCircularB-Medium",
                                      "textAlignVertical": "center",
                                    },
                                    Array [
                                      Object {
                                        "color": "#FCFDFF",
                                        "fontSize": 8,
                                      },
                                      Object {
                                        "fontSize": 10,
                                      },
                                    ],
                                  ],
                                ]
                              }
                            >
                              ERC-20 tokens only
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexBasis": 0,
                              "flexDirection": "row",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "flexWrap": "wrap",
                              "justifyContent": "flex-end",
                              "minHeight": 28,
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": -20,
                              "marginLeft": -12,
                              "marginRight": -20,
                              "marginTop": -20,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            isTVSelectable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "alignSelf": "center",
                                "justifyContent": "center",
                                "opacity": 1,
                                "paddingBottom": 20,
                                "paddingLeft": 20,
                                "paddingRight": 20,
                                "paddingTop": 20,
                                "position": "relative",
                              }
                            }
                          >
                            <View
                              name="close"
                              style={
                                Object {
                                  "color": "#0A1427",
                                  "fontSize": 14,
                                  "marginBottom": undefined,
                                  "marginLeft": undefined,
                                  "marginRight": undefined,
                                  "marginTop": undefined,
                                  "paddingTop": 0,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "paddingBottom": 20,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 0,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    rounded={true}
                    small={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#BD573A",
                          "borderRadius": 8,
                          "justifyContent": "center",
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      small={true}
                      style={
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Regular",
                            "fontSize": 12,
                            "lineHeight": 18,
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "color": "#0A1427",
                              "fontFamily": "EuclidCircularB-Medium",
                              "fontSize": 12,
                              "lineHeight": 18,
                              "textAlignVertical": "center",
                            },
                            Array [
                              Object {
                                "color": "#FCFDFF",
                                "fontSize": 14,
                                "lineHeight": 22,
                              },
                              undefined,
                            ],
                          ],
                        ]
                      }
                    >
                      Do not send real ETH or ERC20 tokens.
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Regular",
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "fontSize": 14,
                              "lineHeight": 22,
                              "marginBottom": 16,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "marginTop": 16,
                            },
                            undefined,
                          ],
                        ]
                      }
                    />
                    <View
                      style={
                        Object {
                          "overflow": "hidden",
                          "padding": 10,
                        }
                      }
                    >
                      <RNSVGSvgView
                        bbHeight={160}
                        bbWidth={160}
                        focusable={false}
                        height={160}
                        id="rn-qr-svg-container"
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            undefined,
                            Object {
                              "opacity": 1,
                            },
                            Object {
                              "flex": 0,
                              "height": 160,
                              "width": 160,
                            },
                          ]
                        }
                        width={160}
                      >
                        <RNSVGGroup
                          fill={
                            Array [
                              0,
                              4278190080,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          font={Object {}}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={Array []}
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        >
                          <RNSVGRect
                            fill={
                              Array [
                                0,
                                4294967295,
                              ]
                            }
                            fillOpacity={1}
                            fillRule={1}
                            height={160}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            opacity={1}
                            originX={0}
                            originY={0}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                            rotation={0}
                            scaleX={1}
                            scaleY={1}
                            skewX={0}
                            skewY={0}
                            stroke={null}
                            strokeDasharray={null}
                            strokeDashoffset={null}
                            strokeLinecap={0}
                            strokeLinejoin={0}
                            strokeMiterlimit={4}
                            strokeOpacity={1}
                            strokeWidth={1}
                            vectorEffect={0}
                            width={160}
                            x={0}
                            y={0}
                          />
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight={160}
                            bbWidth={160}
                            focusable={false}
                            height={160}
                            id="qr-container"
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                undefined,
                                Object {
                                  "opacity": 1,
                                },
                                Object {
                                  "flex": 0,
                                  "height": 160,
                                  "width": 160,
                                },
                              ]
                            }
                            vbHeight={100}
                            vbWidth={100}
                            width={160}
                          >
                            <RNSVGGroup
                              fill={
                                Array [
                                  0,
                                  4278190080,
                                ]
                              }
                              fillOpacity={1}
                              fillRule={1}
                              font={Object {}}
                              matrix={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              opacity={1}
                              originX={0}
                              originY={0}
                              propList={Array []}
                              rotation={0}
                              scaleX={1}
                              scaleY={1}
                              skewX={0}
                              skewY={0}
                              stroke={null}
                              strokeDasharray={null}
                              strokeDashoffset={null}
                              strokeLinecap={0}
                              strokeLinejoin={0}
                              strokeMiterlimit={4}
                              strokeOpacity={1}
                              strokeWidth={1}
                              vectorEffect={0}
                              x={0}
                              y={0}
                            >
                              <RNSVGDefs>
                                <RNSVGClipPath
                                  fill={
                                    Array [
                                      0,
                                      4278190080,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  name="clip-wrapper"
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={Array []}
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                >
                                  <RNSVGRect
                                    fill={
                                      Array [
                                        0,
                                        4278190080,
                                      ]
                                    }
                                    fillOpacity={1}
                                    fillRule={1}
                                    height={15}
                                    matrix={
                                      Array [
                                        1,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                      ]
                                    }
                                    opacity={1}
                                    originX={0}
                                    originY={0}
                                    propList={Array []}
                                    rotation={0}
                                    rx={0}
                                    ry={0}
                                    scaleX={1}
                                    scaleY={1}
                                    skewX={0}
                                    skewY={0}
                                    stroke={null}
                                    strokeDasharray={null}
                                    strokeDashoffset={null}
                                    strokeLinecap={0}
                                    strokeLinejoin={0}
                                    strokeMiterlimit={4}
                                    strokeOpacity={1}
                                    strokeWidth={1}
                                    vectorEffect={0}
                                    width={15}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGClipPath>
                                <RNSVGClipPath
                                  fill={
                                    Array [
                                      0,
                                      4278190080,
                                    ]
                                  }
                                  fillOpacity={1}
                                  fillRule={1}
                                  matrix={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  name="clip-logo"
                                  opacity={1}
                                  originX={0}
                                  originY={0}
                                  propList={Array []}
                                  rotation={0}
                                  scaleX={1}
                                  scaleY={1}
                                  skewX={0}
                                  skewY={0}
                                  stroke={null}
                                  strokeDasharray={null}
                                  strokeDashoffset={null}
                                  strokeLinecap={0}
                                  strokeLinejoin={0}
                                  strokeMiterlimit={4}
                                  strokeOpacity={1}
                                  strokeWidth={1}
                                  vectorEffect={0}
                                  x={0}
                                  y={0}
                                >
                                  <RNSVGRect
                                    fill={
                                      Array [
                                        0,
                                        4278190080,
                                      ]
                                    }
                                    fillOpacity={1}
                                    fillRule={1}
                                    height={12.5}
                                    matrix={
                                      Array [
                                        1,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                      ]
                                    }
                                    opacity={1}
                                    originX={0}
                                    originY={0}
                                    propList={Array []}
                                    rotation={0}
                                    rx={0}
                                    ry={0}
                                    scaleX={1}
                                    scaleY={1}
                                    skewX={0}
                                    skewY={0}
                                    stroke={null}
                                    strokeDasharray={null}
                                    strokeDashoffset={null}
                                    strokeLinecap={0}
                                    strokeLinejoin={0}
                                    strokeMiterlimit={4}
                                    strokeOpacity={1}
                                    strokeWidth={1}
                                    vectorEffect={0}
                                    width={12.5}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGClipPath>
                                <RNSVGLinearGradient
                                  gradient={
                                    Array [
                                      0,
                                      -65536,
                                      1,
                                      -16711681,
                                    ]
                                  }
                                  gradientTransform={
                                    Array [
                                      1,
                                      0,
                                      0,
                                      1,
                                      0,
                                      0,
                                    ]
                                  }
                                  gradientUnits={0}
                                  name="grad"
                                  x1="0%"
                                  x2="100%"
                                  y1="0%"
                                  y2="100%"
                                />
                              </RNSVGDefs>
                              <RNSVGPath
                                d="M0 2 L28 2 M52 2 L68 2 M72 2 L100 2 M0 6 L4 6 M24 6 L28 6 M32 6 L36 6 M44 6 L48 6 M56 6 L68 6 M72 6 L76 6 M96 6 L100 6 M0 10 L4 10 M8 10 L20 10 M24 10 L28 10 M44 10 L52 10 M56 10 L60 10 M72 10 L76 10 M80 10 L92 10 M96 10 L100 10 M0 14 L4 14 M8 14 L20 14 M24 14 L28 14 M40 14 L48 14 M52 14 L56 14 M60 14 L64 14 M72 14 L76 14 M80 14 L92 14 M96 14 L100 14 M0 18 L4 18 M8 18 L20 18 M24 18 L28 18 M32 18 L36 18 M40 18 L64 18 M72 18 L76 18 M80 18 L92 18 M96 18 L100 18 M0 22 L4 22 M24 22 L28 22 M36 22 L44 22 M48 22 L52 22 M56 22 L64 22 M72 22 L76 22 M96 22 L100 22 M0 26 L28 26 M32 26 L36 26 M40 26 L44 26 M48 26 L52 26 M56 26 L60 26 M64 26 L68 26 M72 26 L100 26 M36 30 L48 30 M60 30 L68 30 M0 34 L4 34 M8 34 L12 34 M16 34 L20 34 M24 34 L28 34 M44 34 L48 34 M64 34 L68 34 M80 34 L84 34 M92 34 L96 34 M4 38 L12 38 M32 38 L56 38 M64 38 L80 38 M84 38 L100 38 M0 42 L8 42 M12 42 L16 42 M24 42 L36 42 M40 42 L44 42 M56 42 L60 42 M72 42 L100 42 M0 46 L4 46 M8 46 L16 46 M28 46 L36 46 M40 46 L44 46 M52 46 L60 46 M64 46 L72 46 M76 46 L80 46 M92 46 L96 46 M8 50 L16 50 M20 50 L32 50 M40 50 L48 50 M56 50 L76 50 M84 50 L88 50 M4 54 L20 54 M28 54 L32 54 M44 54 L48 54 M56 54 L60 54 M64 54 L68 54 M84 54 L88 54 M92 54 L100 54 M0 58 L4 58 M8 58 L16 58 M24 58 L28 58 M32 58 L44 58 M52 58 L56 58 M72 58 L76 58 M80 58 L88 58 M92 58 L100 58 M4 62 L8 62 M16 62 L24 62 M44 62 L48 62 M76 62 L80 62 M84 62 L88 62 M92 62 L96 62 M0 66 L4 66 M8 66 L40 66 M48 66 L52 66 M64 66 L84 66 M92 66 L100 66 M32 70 L36 70 M44 70 L56 70 M60 70 L68 70 M80 70 L88 70 M0 74 L28 74 M44 74 L52 74 M56 74 L60 74 M64 74 L68 74 M72 74 L76 74 M80 74 L84 74 M88 74 L100 74 M0 78 L4 78 M24 78 L28 78 M40 78 L44 78 M48 78 L60 78 M64 78 L68 78 M80 78 L84 78 M92 78 L100 78 M0 82 L4 82 M8 82 L20 82 M24 82 L28 82 M32 82 L36 82 M40 82 L48 82 M56 82 L60 82 M64 82 L84 82 M96 82 L100 82 M0 86 L4 86 M8 86 L20 86 M24 86 L28 86 M36 86 L40 86 M44 86 L48 86 M56 86 L64 86 M76 86 L92 86 M0 90 L4 90 M8 90 L20 90 M24 90 L28 90 M32 90 L40 90 M52 90 L56 90 M64 90 L76 90 M80 90 L92 90 M96 90 L100 90 M0 94 L4 94 M24 94 L28 94 M36 94 L48 94 M60 94 L72 94 M80 94 L84 94 M92 94 L96 94 M0 98 L28 98 M32 98 L36 98 M40 98 L44 98 M48 98 L52 98 M64 98 L68 98 M80 98 L88 98 M92 98 L100 98 "
                                fill={
                                  Array [
                                    0,
                                    4278190080,
                                  ]
                                }
                                fillOpacity={1}
                                fillRule={1}
                                matrix={
                                  Array [
                                    1,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                  ]
                                }
                                opacity={1}
                                originX={0}
                                originY={0}
                                propList={
                                  Array [
                                    "stroke",
                                    "strokeWidth",
                                  ]
                                }
                                rotation={0}
                                scaleX={1}
                                scaleY={1}
                                skewX={0}
                                skewY={0}
                                stroke={
                                  Array [
                                    0,
                                    4278850599,
                                  ]
                                }
                                strokeDasharray={null}
                                strokeDashoffset={null}
                                strokeLinecap={0}
                                strokeLinejoin={0}
                                strokeMiterlimit={4}
                                strokeOpacity={1}
                                strokeWidth={4}
                                vectorEffect={0}
                                x={0}
                                y={0}
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </RNSVGGroup>
                      </RNSVGSvgView>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                          "marginBottom": 20,
                          "marginTop": 40,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "auto",
                          "backgroundColor": "#2AA057",
                          "borderColor": "#EDEDED",
                          "borderRadius": 6,
                          "borderStyle": "solid",
                          "borderWidth": 0,
                          "flexDirection": "row",
                          "height": 56,
                          "justifyContent": "center",
                          "marginBottom": 0,
                          "marginLeft": 0,
                          "marginRight": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingBottom": 0,
                          "paddingLeft": 22,
                          "paddingRight": 22,
                          "paddingTop": 0,
                          "width": 351,
                        }
                      }
                    >
                      <Text
                        customTheme={
                          Object {
                            "borderWidth": 0,
                          }
                        }
                        small={false}
                        style={
                          Array [
                            Object {
                              "color": "#0A1427",
                              "fontFamily": "EuclidCircularB-Regular",
                              "fontSize": 12,
                              "lineHeight": 18,
                              "textAlignVertical": "center",
                            },
                            Array [
                              Object {
                                "color": "#0A1427",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 12,
                                "lineHeight": 18,
                                "textAlignVertical": "center",
                              },
                              Array [
                                Object {
                                  "color": "#FCFDFF",
                                  "fontSize": 18,
                                  "marginBottom": 0,
                                },
                                undefined,
                              ],
                            ],
                          ]
                        }
                        theme={
                          Object {
                            "colors": Object {
                              "PPNSurface": "#0a0c78",
                              "PPNText": "#f33726",
                              "accent": "#818EB3",
                              "activeTabBarIcon": "#007AFF",
                              "bitcoinWallet": "#F79319",
                              "border": "#EDEDED",
                              "buttonSecondaryBackground": "#e6f1f9",
                              "card": "#FFFFFF",
                              "control": "#FCFDFF",
                              "danger": "#ff0005",
                              "helpIcon": "#f7931a",
                              "iconBackground": "#ebf0f5",
                              "inactiveTabBarIcon": "#D4D9DB",
                              "indicator": "#F8E71C",
                              "legacyWallet": "#FA574F",
                              "negative": "#BD573A",
                              "notice": "#ea480e",
                              "orange": "#f57c00",
                              "popularSwaps": "#d08cb1",
                              "positive": "#2AA057",
                              "primary": "#007AFF",
                              "secondaryAccent": "#EBF0F5",
                              "secondaryText": "#8B939E",
                              "smartWallet": "#3C71FE",
                              "smartWalletSurface": "#f3f7ff",
                              "smartWalletText": "#1D24D8",
                              "surface": "#2AA057",
                              "synthetic": "#2329d6",
                              "tertiary": "#EBF0F6",
                              "text": "#FCFDFF",
                              "transactionReceivedIcon": "#497391",
                              "userAvatar": "#d1d9e4",
                              "warning": "#ECA93A",
                            },
                            "current": "lightTheme",
                          }
                        }
                      >
                        Buy tokens
                      </Text>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "auto",
                          "backgroundColor": "#007AFF",
                          "borderColor": "#007AFF",
                          "borderRadius": 6,
                          "borderStyle": "solid",
                          "borderWidth": 0,
                          "elevation": 1,
                          "flexDirection": "row",
                          "height": 56,
                          "justifyContent": "center",
                          "marginBottom": 0,
                          "marginLeft": 0,
                          "marginRight": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingBottom": 0,
                          "paddingLeft": 22,
                          "paddingRight": 22,
                          "paddingTop": 0,
                          "shadowColor": "rgba(0,0,0,.12)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 1,
                          "shadowRadius": 7,
                          "width": 351,
                        }
                      }
                    >
                      <Text
                        customTheme={
                          Object {
                            "borderWidth": 0,
                            "shadow": true,
                          }
                        }
                        small={false}
                        style={
                          Array [
                            Object {
                              "color": "#0A1427",
                              "fontFamily": "EuclidCircularB-Regular",
                              "fontSize": 12,
                              "lineHeight": 18,
                              "textAlignVertical": "center",
                            },
                            Array [
                              Object {
                                "color": "#0A1427",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 12,
                                "lineHeight": 18,
                                "textAlignVertical": "center",
                              },
                              Array [
                                Object {
                                  "color": "#FCFDFF",
                                  "fontSize": 18,
                                  "marginBottom": 0,
                                },
                                undefined,
                              ],
                            ],
                          ]
                        }
                        theme={
                          Object {
                            "colors": Object {
                              "PPNSurface": "#0a0c78",
                              "PPNText": "#f33726",
                              "accent": "#818EB3",
                              "activeTabBarIcon": "#007AFF",
                              "bitcoinWallet": "#F79319",
                              "border": "#007AFF",
                              "buttonSecondaryBackground": "#e6f1f9",
                              "card": "#FFFFFF",
                              "control": "#FCFDFF",
                              "danger": "#ff0005",
                              "helpIcon": "#f7931a",
                              "iconBackground": "#ebf0f5",
                              "inactiveTabBarIcon": "#D4D9DB",
                              "indicator": "#F8E71C",
                              "legacyWallet": "#FA574F",
                              "negative": "#BD573A",
                              "notice": "#ea480e",
                              "orange": "#f57c00",
                              "popularSwaps": "#d08cb1",
                              "positive": "#2AA057",
                              "primary": "#007AFF",
                              "secondaryAccent": "#EBF0F5",
                              "secondaryText": "#8B939E",
                              "smartWallet": "#3C71FE",
                              "smartWalletSurface": "#f3f7ff",
                              "smartWalletText": "#1D24D8",
                              "surface": "#007AFF",
                              "synthetic": "#2329d6",
                              "tertiary": "#EBF0F6",
                              "text": "#FCFDFF",
                              "transactionReceivedIcon": "#497391",
                              "userAvatar": "#d1d9e4",
                              "warning": "#ECA93A",
                            },
                            "current": "lightTheme",
                          }
                        }
                      >
                        Share Address
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "marginBottom": 0,
                          "marginLeft": 16,
                          "marginRight": 16,
                          "marginTop": 0,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Image
                      source={
                        Object {
                          "testUri": "../../../src/assets/icons/visa.png",
                        }
                      }
                    />
                    <View
                      style={
                        Array [
                          Object {
                            "width": 8,
                          },
                          undefined,
                        ]
                      }
                    />
                    <Image
                      source={
                        Object {
                          "testUri": "../../../src/assets/icons/mastercard.png",
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "height": 100,
                      "marginBottom": -100,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
          <View
            opacity={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "elevation": 9,
                  "justifyContent": "center",
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "#333",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.25,
                  "shadowRadius": 10,
                  "top": 0,
                  "width": "100%",
                  "zIndex": 1000,
                },
                Object {
                  "transform": Array [
                    Object {
                      "translateY": -260,
                    },
                  ],
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              pointerEvents="box-none"
              style={
                Object {
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 20,
                  "width": "100%",
                }
              }
            >
              <View
                androidStatusbarHeight={42}
                style={
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginTop": 42,
                      "minHeight": 58,
                      "paddingBottom": 10,
                      "paddingTop": 8,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "display": "flex",
                        "flexBasis": 0,
                        "flexGrow": 2,
                        "flexShrink": 1,
                        "justifyContent": "center",
                        "paddingTop": 2,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    name="info-circle"
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 24,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                        "flexBasis": 0,
                        "flexGrow": 9,
                        "flexShrink": 1,
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <View>
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Regular",
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "color": "#8B939E",
                              "fontSize": 14,
                              "lineHeight": 22,
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "display": "flex",
                      "flex": 2,
                      "justifyContent": "center",
                      "opacity": 1,
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    name="close"
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "borderWidth": 0,
                        "color": "#8B939E",
                        "fontSize": undefined,
                        "justifyContent": "center",
                        "marginBottom": undefined,
                        "marginLeft": undefined,
                        "marginRight": undefined,
                        "marginTop": undefined,
                        "paddingTop": 0,
                        "textAlign": "center",
                        "width": 32,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
          <Modal
            animationType="fade"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0.4)",
                  "flex": 1,
                  "justifyContent": "flex-end",
                  "opacity": 1,
                }
              }
            >
              <View
                accessible={true}
                focusable={false}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "elevation": 4,
                    "height": NaN,
                    "maxHeight": 667,
                    "minHeight": 56,
                    "opacity": 1,
                    "padding": 15,
                  }
                }
              >
                <RCTScrollView
                  data={Array []}
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "marginHorizontal": -15,
                      "marginTop": 0,
                    }
                  }
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View />
                </RCTScrollView>
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </Modal>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      onSwipeComplete={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onSwipeComplete={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={[Function]}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "left": 0,
            "margin": 0,
            "position": "relative",
            "top": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 10,
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeDirection="down"
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            bgColor="#FAFAFA"
            style={
              Array [
                Object {
                  "height": "100%",
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            />
            <View
              customTheme={
                Object {
                  "borderRadius": "30px",
                  "padding": "0 16px",
                }
              }
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderTopLeftRadius": 30,
                    "borderTopRightRadius": 30,
                    "elevation": 1,
                    "marginHorizontal": 0,
                    "marginTop": "auto",
                    "overflow": "hidden",
                    "paddingBottom": 0,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 0,
                    "shadowColor": "rgba(0,0,0,.1)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 7,
                  },
                  undefined,
                ]
              }
            >
              <View
                noBottomBorder={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FAFAFA",
                      "width": "100%",
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                  ]
                }
              >
                <View
                  androidStatusbarHeight={42}
                  noPaddingTop={true}
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    noHorizonatalPadding={true}
                    style={
                      Array [
                        Object {
                          "minHeight": 58,
                          "paddingVertical": 15,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "width": "100%",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        sideFlex={4}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexBasis": 0,
                              "flexDirection": "row",
                              "flexGrow": 4,
                              "flexShrink": 1,
                              "flexWrap": "wrap",
                              "justifyContent": "flex-start",
                              "minHeight": 28,
                            },
                            Object {},
                          ]
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexBasis": 0,
                              "flexDirection": "row",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "flexWrap": "wrap",
                              "justifyContent": "flex-end",
                              "minHeight": 28,
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": -20,
                              "marginLeft": -12,
                              "marginRight": -20,
                              "marginTop": -20,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            isTVSelectable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "alignSelf": "center",
                                "justifyContent": "center",
                                "opacity": 1,
                                "paddingBottom": 20,
                                "paddingLeft": 20,
                                "paddingRight": 20,
                                "paddingTop": 20,
                                "position": "relative",
                              }
                            }
                          >
                            <View
                              name="close"
                              style={
                                Object {
                                  "color": "#0A1427",
                                  "fontSize": 14,
                                  "marginBottom": undefined,
                                  "marginLeft": undefined,
                                  "marginRight": undefined,
                                  "marginTop": undefined,
                                  "paddingTop": 0,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  light={true}
                  small={true}
                  style={
                    Array [
                      Object {
                        "color": "#0A1427",
                        "fontFamily": "EuclidCircularB-Regular",
                        "fontSize": 12,
                        "lineHeight": 18,
                        "textAlignVertical": "center",
                      },
                      Array [
                        Object {
                          "color": "#8B939E",
                          "flexWrap": "wrap",
                          "fontSize": 16,
                          "lineHeight": 24,
                          "marginBottom": 5,
                          "textAlign": "left",
                        },
                        Array [
                          Object {
                            "paddingBottom": 80,
                          },
                          undefined,
                        ],
                      ],
                    ]
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "height": 100,
                      "marginBottom": -100,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
          <View
            opacity={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "elevation": 9,
                  "justifyContent": "center",
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "#333",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.25,
                  "shadowRadius": 10,
                  "top": 0,
                  "width": "100%",
                  "zIndex": 1000,
                },
                Object {
                  "transform": Array [
                    Object {
                      "translateY": -260,
                    },
                  ],
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              pointerEvents="box-none"
              style={
                Object {
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 20,
                  "width": "100%",
                }
              }
            >
              <View
                androidStatusbarHeight={42}
                style={
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginTop": 42,
                      "minHeight": 58,
                      "paddingBottom": 10,
                      "paddingTop": 8,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "display": "flex",
                        "flexBasis": 0,
                        "flexGrow": 2,
                        "flexShrink": 1,
                        "justifyContent": "center",
                        "paddingTop": 2,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    name="info-circle"
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 24,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                        "flexBasis": 0,
                        "flexGrow": 9,
                        "flexShrink": 1,
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <View>
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Regular",
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "color": "#8B939E",
                              "fontSize": 14,
                              "lineHeight": 22,
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "stretch",
                      "display": "flex",
                      "flex": 2,
                      "justifyContent": "center",
                      "opacity": 1,
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    name="close"
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "borderWidth": 0,
                        "color": "#8B939E",
                        "fontSize": undefined,
                        "justifyContent": "center",
                        "marginBottom": undefined,
                        "marginLeft": undefined,
                        "marginRight": undefined,
                        "marginTop": undefined,
                        "paddingTop": 0,
                        "textAlign": "center",
                        "width": 32,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
          <Modal
            animationType="fade"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0.4)",
                  "flex": 1,
                  "justifyContent": "flex-end",
                  "opacity": 1,
                }
              }
            >
              <View
                accessible={true}
                focusable={false}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "elevation": 4,
                    "height": NaN,
                    "maxHeight": 667,
                    "minHeight": 56,
                    "opacity": 1,
                    "padding": 15,
                  }
                }
              >
                <RCTScrollView
                  data={Array []}
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "marginHorizontal": -15,
                      "marginTop": 0,
                    }
                  }
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View />
                </RCTScrollView>
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;
