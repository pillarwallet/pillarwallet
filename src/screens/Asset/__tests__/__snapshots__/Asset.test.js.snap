// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Asset renders the Asset Screen correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(255, 255, 255, 1)",
        "borderBottomWidth": 1,
        "borderColor": "rgba(237, 237, 237, 1)",
        "width": "100%",
      }
    }
  >
    <View
      androidStatusbarHeight={42}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "marginTop": 42,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 20,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "height": 58,
              "paddingHorizontal": 16,
              "paddingVertical": 10,
              "width": "100%",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "height": 36,
                  "justifyContent": "flex-start",
                },
                Object {},
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#EBF0F6",
                  "borderRadius": 36,
                  "height": 36,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 0,
                  "position": "relative",
                  "width": 36,
                }
              }
            >
              <View
                name="back"
                style={
                  Object {
                    "color": "#0A1427",
                    "fontSize": 18,
                    "marginBottom": undefined,
                    "marginLeft": undefined,
                    "marginRight": undefined,
                    "marginTop": undefined,
                    "paddingTop": 0,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 4,
                  "flexShrink": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingBottom": 0,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 0,
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "alignContent": "center",
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "height": 36,
                  "justifyContent": "flex-end",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "marginLeft": 8,
                  "marginRight": -10,
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "center",
                    "height": 36,
                    "justifyContent": "center",
                    "opacity": 1,
                    "paddingBottom": 5,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 5,
                    "position": "relative",
                    "width": 44,
                  }
                }
              >
                <View
                  name="info-circle-inverse"
                  style={
                    Object {
                      "color": "#0A1427",
                      "fontSize": 24,
                      "marginBottom": undefined,
                      "marginLeft": undefined,
                      "marginRight": undefined,
                      "marginTop": undefined,
                      "paddingTop": 0,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    androidStatusbarHeight={0}
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Object {
        "backgroundColor": "#FAFAFA",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={true}
      enableResetScrollToCoords={true}
      extraHeight={0}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardSpace={0}
      onScroll={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      resetKeyboardSpace={[Function]}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "height": "100%",
          "paddingHorizontal": 0,
        }
      }
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            Array [
              Object {
                "height": 250,
                "justifyContent": "center",
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 220,
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              addShadow={false}
              borderRadius={54}
              diameter={108}
              elevation={6}
              isListed={true}
              left={375}
              shadowOpacity={0.15}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 108,
                    "justifyContent": "center",
                    "left": 375,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 125.5,
                    "width": 108,
                    "zIndex": 3,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -54,
                      },
                      Object {
                        "translateY": -54,
                      },
                    ],
                  },
                ]
              }
              top={125.5}
              zIndex={3}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 104,
                      "opacity": 1,
                      "width": 104,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
            <View
              addShadow={false}
              borderRadius={35}
              diameter={70}
              elevation={0}
              isListed={true}
              left={266.2}
              shadowOpacity={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 70,
                    "justifyContent": "center",
                    "left": 266.2,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 65.5,
                    "width": 70,
                    "zIndex": 1,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -35,
                      },
                      Object {
                        "translateY": -35,
                      },
                    ],
                  },
                ]
              }
              top={65.5}
              zIndex={1}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    0.6065,
                    0.3575,
                    0.036,
                    0,
                    0,
                    0.1065,
                    0.8574999999999999,
                    0.036,
                    0,
                    0,
                    0.1065,
                    0.3575,
                    0.536,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 66,
                      "opacity": 0.15,
                      "width": 66,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
            <View
              addShadow={false}
              borderRadius={45}
              diameter={90}
              elevation={4}
              isListed={true}
              left={310.33333333333337}
              shadowOpacity={0.05}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 90,
                    "justifyContent": "center",
                    "left": 310.33333333333337,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 104.5,
                    "width": 90,
                    "zIndex": 2,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -45,
                      },
                      Object {
                        "translateY": -45,
                      },
                    ],
                  },
                ]
              }
              top={104.5}
              zIndex={2}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    0.7638999999999999,
                    0.21450000000000002,
                    0.0216,
                    0,
                    0,
                    0.06390000000000001,
                    0.9145,
                    0.0216,
                    0,
                    0,
                    0.06390000000000001,
                    0.21450000000000002,
                    0.7215999999999999,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 86,
                      "opacity": 0.3,
                      "width": 86,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
            <View
              addShadow={false}
              borderRadius={45}
              diameter={90}
              elevation={4}
              isListed={true}
              left={439.66666666666663}
              shadowOpacity={0.05}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 90,
                    "justifyContent": "center",
                    "left": 439.66666666666663,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 104.5,
                    "width": 90,
                    "zIndex": 2,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -45,
                      },
                      Object {
                        "translateY": -45,
                      },
                    ],
                  },
                ]
              }
              top={104.5}
              zIndex={2}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    0.7638999999999999,
                    0.21450000000000002,
                    0.0216,
                    0,
                    0,
                    0.06390000000000001,
                    0.9145,
                    0.0216,
                    0,
                    0,
                    0.06390000000000001,
                    0.21450000000000002,
                    0.7215999999999999,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 86,
                      "opacity": 0.3,
                      "width": 86,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
            <View
              addShadow={false}
              borderRadius={35}
              diameter={70}
              elevation={0}
              isListed={true}
              left={483.8}
              shadowOpacity={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#FFFFFF",
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 0,
                    "height": 70,
                    "justifyContent": "center",
                    "left": 483.8,
                    "position": "absolute",
                    "shadowColor": "#0A1427",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 6,
                    "top": 65.5,
                    "width": 70,
                    "zIndex": 1,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "translateX": -35,
                      },
                      Object {
                        "translateY": -35,
                      },
                    ],
                  },
                ]
              }
              top={65.5}
              zIndex={1}
            >
              <CMIFColorMatrixImageFilter
                matrix={
                  Array [
                    0.6065,
                    0.3575,
                    0.036,
                    0,
                    0,
                    0.1065,
                    0.8574999999999999,
                    0.036,
                    0,
                    0,
                    0.1065,
                    0.3575,
                    0.536,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                  ]
                }
                style={
                  Array [
                    Object {
                      "backgroundColor": "#fff0",
                    },
                    undefined,
                  ]
                }
              >
                <Image
                  onError={[Function]}
                  onLoadEnd={[Function]}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": "http://icons/plr?size=3",
                    }
                  }
                  style={
                    Object {
                      "height": 66,
                      "opacity": 0.15,
                      "width": 66,
                    }
                  }
                />
              </CMIFColorMatrixImageFilter>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginBottom": 20,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 0,
                "paddingBottom": 8,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              isSynthetic={false}
              style={
                Array [
                  Object {
                    "color": "#0A1427",
                    "fontFamily": "EuclidCircularB-Regular",
                    "textAlignVertical": "center",
                  },
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontFamily": "EuclidCircularB-Medium",
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {
                        "color": "#0A1427",
                        "fontSize": 36,
                        "lineHeight": 54,
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ],
                ]
              }
            >
              tokenValue
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#0A1427",
                    "fontFamily": "EuclidCircularB-Regular",
                    "textAlignVertical": "center",
                  },
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontSize": 12,
                      "lineHeight": 18,
                      "textAlign": "center",
                    },
                    undefined,
                  ],
                ]
              }
            >
              £ 0
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "borderBottomWidth": 1,
                "borderColor": "#EDEDED",
                "borderTopWidth": 1,
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
                "marginTop": 4,
                "paddingBottom": 30,
                "paddingTop": 10,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 0,
                  "paddingBottom": 0,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 0,
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginBottom": 16,
                  "marginLeft": "5%",
                  "marginRight": "5%",
                  "marginTop": 16,
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "position": "relative",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "position": "relative",
                      },
                      Object {
                        "margin": 4,
                        "marginBottom": 12,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 64,
                          "position": "relative",
                          "width": 64,
                        },
                        Object {
                          "marginVertical": 0,
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      bbHeight={148}
                      bbWidth={148}
                      focusable={false}
                      height={148}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "left": -9,
                            "position": "absolute",
                            "top": -6,
                          },
                          Object {
                            "opacity": 1,
                          },
                          Object {
                            "flex": 0,
                            "height": 148,
                            "width": 148,
                          },
                        ]
                      }
                      width={148}
                    >
                      <RNSVGGroup
                        fill={
                          Array [
                            0,
                            4278190080,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        font={Object {}}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={Array []}
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      >
                        <RNSVGDefs>
                          <RNSVGLinearGradient
                            gradient={
                              Array [
                                0,
                                218562682,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="top"
                            x1="0%"
                            x2="0%"
                            y1="100%"
                            y2="0%"
                          />
                          <RNSVGLinearGradient
                            gradient={
                              Array [
                                0,
                                218562682,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="bottom"
                            x1="0%"
                            x2="0%"
                            y1="0%"
                            y2="100%"
                          />
                          <RNSVGLinearGradient
                            gradient={
                              Array [
                                0,
                                218562682,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="left"
                            x1="100%"
                            x2="0%"
                            y1="0%"
                            y2="0%"
                          />
                          <RNSVGLinearGradient
                            gradient={
                              Array [
                                0,
                                218562682,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="right"
                            x1="0%"
                            x2="100%"
                            y1="0%"
                            y2="0%"
                          />
                          <RNSVGRadialGradient
                            cx="100%"
                            cy="100%"
                            fx="100%"
                            fy="100%"
                            gradient={
                              Array [
                                0,
                                218562682,
                                0.7619047619047619,
                                218562682,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="border-left-top"
                            rx="100%"
                            ry="100%"
                          />
                          <RNSVGRadialGradient
                            cx="100%"
                            cy="0%"
                            fx="100%"
                            fy="0%"
                            gradient={
                              Array [
                                0,
                                218562682,
                                0.7619047619047619,
                                218562682,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="border-left-bottom"
                            rx="100%"
                            ry="100%"
                          />
                          <RNSVGRadialGradient
                            cx="0%"
                            cy="100%"
                            fx="0%"
                            fy="100%"
                            gradient={
                              Array [
                                0,
                                218562682,
                                0.7619047619047619,
                                218562682,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="border-right-top"
                            rx="100%"
                            ry="100%"
                          />
                          <RNSVGRadialGradient
                            cx="0%"
                            cy="0%"
                            fx="0%"
                            fy="0%"
                            gradient={
                              Array [
                                0,
                                218562682,
                                0.7619047619047619,
                                218562682,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="border-right-bottom"
                            rx="100%"
                            ry="100%"
                          />
                        </RNSVGDefs>
                        <RNSVGPath
                          d="M 0 42,Q 0 0 42 0,v 10,q -32 0 -32 32,h -10,z"
                          fill={
                            Array [
                              1,
                              "border-left-top",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M 42 0,q 42 0 42 42,h -10,q 0 -32 -32 -32,v -10,z"
                          fill={
                            Array [
                              1,
                              "border-right-top",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M 74 42,h 10,q 0 42 -42 42,v -10,q 32 0 32 -32,z"
                          fill={
                            Array [
                              1,
                              "border-right-bottom",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M 0 42,q 0 42 42 42,v -10,q -32 0 -32 -32,h -10,z"
                          fill={
                            Array [
                              1,
                              "border-left-bottom",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGRect
                          fill={
                            Array [
                              1,
                              "top",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          height={10}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          width={0}
                          x={42}
                          y="0"
                        />
                        <RNSVGRect
                          fill={
                            Array [
                              1,
                              "left",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          height={0}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          width={10}
                          x="0"
                          y={42}
                        />
                        <RNSVGRect
                          fill={
                            Array [
                              1,
                              "right",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          height={0}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          width={10}
                          x={74}
                          y={42}
                        />
                        <RNSVGRect
                          fill={
                            Array [
                              1,
                              "bottom",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          height={10}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          width={0}
                          x={42}
                          y={74}
                        />
                        <RNSVGPath
                          d="M 42 10,h 0,q 32 0 32 32,v 0,q 0 32 -32 32,h -0,q -32 0 -32 -32,v -0,q 0 -32 32 -32"
                          fill={
                            Array [
                              0,
                              218562682,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "height": 64,
                            "justifyContent": "center",
                            "position": "absolute",
                            "width": 64,
                          },
                          undefined,
                        ]
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight={64}
                        bbWidth={64}
                        focusable={false}
                        height={64}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Array [
                              Object {
                                "alignItems": "center",
                                "height": 64,
                                "justifyContent": "center",
                                "position": "absolute",
                                "width": 64,
                              },
                              undefined,
                            ],
                            Object {
                              "opacity": 1,
                            },
                            Object {
                              "flex": 0,
                              "height": 64,
                              "width": 64,
                            },
                          ]
                        }
                        vbHeight={64}
                        vbWidth={64}
                        width={64}
                      >
                        <RNSVGGroup
                          fill={
                            Array [
                              0,
                              4278190080,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          font={Object {}}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={Array []}
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        >
                          <RNSVGDefs>
                            <RNSVGLinearGradient
                              gradient={
                                Array [
                                  0,
                                  -328966,
                                  1,
                                  -854791,
                                ]
                              }
                              gradientTransform={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              gradientUnits={0}
                              name="grad"
                              x1="0"
                              x2="0"
                              y1="0"
                              y2="1"
                            />
                          </RNSVGDefs>
                          <RNSVGCircle
                            cx={32}
                            cy={32}
                            fill={
                              Array [
                                1,
                                "grad",
                              ]
                            }
                            fillOpacity={1}
                            fillRule={1}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            opacity={1}
                            originX={0}
                            originY={0}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                            r={32}
                            rotation={0}
                            scaleX={1}
                            scaleY={1}
                            skewX={0}
                            skewY={0}
                            stroke={null}
                            strokeDasharray={null}
                            strokeDashoffset={null}
                            strokeLinecap={0}
                            strokeLinejoin={0}
                            strokeMiterlimit={4}
                            strokeOpacity={1}
                            strokeWidth={1}
                            vectorEffect={0}
                            x={0}
                            y={0}
                          />
                        </RNSVGGroup>
                      </RNSVGSvgView>
                      <View
                        borderColor="rgba(250, 250, 250, 1)"
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "borderColor": "rgba(250, 250, 250, 1)",
                              "borderRadius": 31.5,
                              "borderStyle": "solid",
                              "borderWidth": 0.5,
                              "height": 63,
                              "justifyContent": "center",
                              "position": "absolute",
                              "width": 63,
                            },
                            undefined,
                          ]
                        }
                      />
                      <View
                        name="qrDetailed"
                        style={
                          Object {
                            "alignSelf": "center",
                            "color": "#007AFF",
                            "fontSize": 22,
                            "opacity": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                disabled={false}
                style={
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontFamily": "EuclidCircularB-Regular",
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {
                        "color": "#007AFF",
                        "fontSize": 16,
                        "letterSpacing": 0.1,
                        "opacity": 1,
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                button.addFunds
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginBottom": 16,
                  "marginLeft": "5%",
                  "marginRight": "5%",
                  "marginTop": 16,
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "position": "relative",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "position": "relative",
                      },
                      Object {
                        "margin": 4,
                        "marginBottom": 12,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 64,
                          "position": "relative",
                          "width": 64,
                        },
                        Object {
                          "marginVertical": 0,
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      bbHeight={148}
                      bbWidth={148}
                      focusable={false}
                      height={148}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "left": -9,
                            "position": "absolute",
                            "top": -6,
                          },
                          Object {
                            "opacity": 1,
                          },
                          Object {
                            "flex": 0,
                            "height": 148,
                            "width": 148,
                          },
                        ]
                      }
                      width={148}
                    >
                      <RNSVGGroup
                        fill={
                          Array [
                            0,
                            4278190080,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        font={Object {}}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={Array []}
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      >
                        <RNSVGDefs>
                          <RNSVGLinearGradient
                            gradient={
                              Array [
                                0,
                                458874,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="top"
                            x1="0%"
                            x2="0%"
                            y1="100%"
                            y2="0%"
                          />
                          <RNSVGLinearGradient
                            gradient={
                              Array [
                                0,
                                458874,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="bottom"
                            x1="0%"
                            x2="0%"
                            y1="0%"
                            y2="100%"
                          />
                          <RNSVGLinearGradient
                            gradient={
                              Array [
                                0,
                                458874,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="left"
                            x1="100%"
                            x2="0%"
                            y1="0%"
                            y2="0%"
                          />
                          <RNSVGLinearGradient
                            gradient={
                              Array [
                                0,
                                458874,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="right"
                            x1="0%"
                            x2="100%"
                            y1="0%"
                            y2="0%"
                          />
                          <RNSVGRadialGradient
                            cx="100%"
                            cy="100%"
                            fx="100%"
                            fy="100%"
                            gradient={
                              Array [
                                0,
                                458874,
                                0.7619047619047619,
                                458874,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="border-left-top"
                            rx="100%"
                            ry="100%"
                          />
                          <RNSVGRadialGradient
                            cx="100%"
                            cy="0%"
                            fx="100%"
                            fy="0%"
                            gradient={
                              Array [
                                0,
                                458874,
                                0.7619047619047619,
                                458874,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="border-left-bottom"
                            rx="100%"
                            ry="100%"
                          />
                          <RNSVGRadialGradient
                            cx="0%"
                            cy="100%"
                            fx="0%"
                            fy="100%"
                            gradient={
                              Array [
                                0,
                                458874,
                                0.7619047619047619,
                                458874,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="border-right-top"
                            rx="100%"
                            ry="100%"
                          />
                          <RNSVGRadialGradient
                            cx="0%"
                            cy="0%"
                            fx="0%"
                            fy="0%"
                            gradient={
                              Array [
                                0,
                                458874,
                                0.7619047619047619,
                                458874,
                                1,
                                458874,
                              ]
                            }
                            gradientTransform={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            gradientUnits={0}
                            name="border-right-bottom"
                            rx="100%"
                            ry="100%"
                          />
                        </RNSVGDefs>
                        <RNSVGPath
                          d="M 0 42,Q 0 0 42 0,v 10,q -32 0 -32 32,h -10,z"
                          fill={
                            Array [
                              1,
                              "border-left-top",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M 42 0,q 42 0 42 42,h -10,q 0 -32 -32 -32,v -10,z"
                          fill={
                            Array [
                              1,
                              "border-right-top",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M 74 42,h 10,q 0 42 -42 42,v -10,q 32 0 32 -32,z"
                          fill={
                            Array [
                              1,
                              "border-right-bottom",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGPath
                          d="M 0 42,q 0 42 42 42,v -10,q -32 0 -32 -32,h -10,z"
                          fill={
                            Array [
                              1,
                              "border-left-bottom",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                        <RNSVGRect
                          fill={
                            Array [
                              1,
                              "top",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          height={10}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          width={0}
                          x={42}
                          y="0"
                        />
                        <RNSVGRect
                          fill={
                            Array [
                              1,
                              "left",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          height={0}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          width={10}
                          x="0"
                          y={42}
                        />
                        <RNSVGRect
                          fill={
                            Array [
                              1,
                              "right",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          height={0}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          width={10}
                          x={74}
                          y={42}
                        />
                        <RNSVGRect
                          fill={
                            Array [
                              1,
                              "bottom",
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          height={10}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          width={0}
                          x={42}
                          y={74}
                        />
                        <RNSVGPath
                          d="M 42 10,h 0,q 32 0 32 32,v 0,q 0 32 -32 32,h -0,q -32 0 -32 -32,v -0,q 0 -32 32 -32"
                          fill={
                            Array [
                              0,
                              458874,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "height": 64,
                            "justifyContent": "center",
                            "position": "absolute",
                            "width": 64,
                          },
                          undefined,
                        ]
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight={64}
                        bbWidth={64}
                        focusable={false}
                        height={64}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            Array [
                              Object {
                                "alignItems": "center",
                                "height": 64,
                                "justifyContent": "center",
                                "position": "absolute",
                                "width": 64,
                              },
                              undefined,
                            ],
                            Object {
                              "opacity": 1,
                            },
                            Object {
                              "flex": 0,
                              "height": 64,
                              "width": 64,
                            },
                          ]
                        }
                        vbHeight={64}
                        vbWidth={64}
                        width={64}
                      >
                        <RNSVGGroup
                          fill={
                            Array [
                              0,
                              4278190080,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          font={Object {}}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={Array []}
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        >
                          <RNSVGDefs>
                            <RNSVGLinearGradient
                              gradient={
                                Array [
                                  0,
                                  -328966,
                                  1,
                                  -854791,
                                ]
                              }
                              gradientTransform={
                                Array [
                                  1,
                                  0,
                                  0,
                                  1,
                                  0,
                                  0,
                                ]
                              }
                              gradientUnits={0}
                              name="grad"
                              x1="0"
                              x2="0"
                              y1="0"
                              y2="1"
                            />
                          </RNSVGDefs>
                          <RNSVGCircle
                            cx={32}
                            cy={32}
                            fill={
                              Array [
                                1,
                                "grad",
                              ]
                            }
                            fillOpacity={1}
                            fillRule={1}
                            matrix={
                              Array [
                                1,
                                0,
                                0,
                                1,
                                0,
                                0,
                              ]
                            }
                            opacity={1}
                            originX={0}
                            originY={0}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                            r={32}
                            rotation={0}
                            scaleX={1}
                            scaleY={1}
                            skewX={0}
                            skewY={0}
                            stroke={null}
                            strokeDasharray={null}
                            strokeDashoffset={null}
                            strokeLinecap={0}
                            strokeLinejoin={0}
                            strokeMiterlimit={4}
                            strokeOpacity={1}
                            strokeWidth={1}
                            vectorEffect={0}
                            x={0}
                            y={0}
                          />
                        </RNSVGGroup>
                      </RNSVGSvgView>
                      <View
                        borderColor="rgba(250, 250, 250, 1)"
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "borderColor": "rgba(250, 250, 250, 1)",
                              "borderRadius": 31.5,
                              "borderStyle": "solid",
                              "borderWidth": 0.5,
                              "height": 63,
                              "justifyContent": "center",
                              "position": "absolute",
                              "width": 63,
                            },
                            undefined,
                          ]
                        }
                      />
                      <View
                        name="paperPlane"
                        style={
                          Object {
                            "alignSelf": "center",
                            "color": "#007AFF",
                            "fontSize": 22,
                            "opacity": 0.5,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                disabled={true}
                style={
                  Array [
                    Object {
                      "color": "#0A1427",
                      "fontFamily": "EuclidCircularB-Regular",
                      "textAlignVertical": "center",
                    },
                    Array [
                      Object {
                        "color": "#8B939E",
                        "fontSize": 16,
                        "letterSpacing": 0.1,
                        "opacity": 1,
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                button.send
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      onSwipeComplete={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onSwipeComplete={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={[Function]}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "left": 0,
            "margin": 0,
            "position": "relative",
            "top": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 10,
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeDirection="down"
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            bgColor="#FAFAFA"
            style={
              Array [
                Object {
                  "height": "100%",
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            />
            <View
              customTheme={
                Object {
                  "borderRadius": "30px",
                  "padding": "0 16px",
                }
              }
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderTopLeftRadius": 30,
                    "borderTopRightRadius": 30,
                    "elevation": 1,
                    "marginHorizontal": 0,
                    "marginTop": "auto",
                    "overflow": "hidden",
                    "paddingBottom": 0,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 0,
                    "shadowColor": "rgba(0,0,0,.1)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 7,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "paddingBottom": 40,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 24,
                    }
                  }
                >
                  <Text
                    big={true}
                    center={true}
                    style={
                      Array [
                        Object {
                          "color": "#0A1427",
                          "fontFamily": "EuclidCircularB-Regular",
                          "fontSize": 18,
                          "lineHeight": 28,
                          "textAlign": "center",
                          "textAlignVertical": "center",
                        },
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Medium",
                            "fontSize": 18,
                            "lineHeight": 28,
                            "textAlign": "center",
                            "textAlignVertical": "center",
                          },
                          Object {
                            "paddingBottom": 22,
                            "paddingHorizontal": 16,
                          },
                        ],
                      ]
                    }
                  >
                    title.addFundsToWallet
                  </Text>
                  <View
                    style={
                      Array [
                        Object {
                          "flexDirection": "column",
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "opacity": 1,
                          "paddingBottom": 5,
                          "paddingLeft": 14,
                          "paddingRight": 14,
                          "paddingTop": 5,
                          "width": "100%",
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "justifyContent": "center",
                              "paddingRight": 12,
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          diameter={48}
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#EBF0F6",
                                "borderColor": "#EBF0F6",
                                "borderRadius": 24,
                                "borderWidth": 0,
                                "height": 48,
                                "justifyContent": "center",
                                "overflow": "hidden",
                                "textAlign": "center",
                                "width": 48,
                              },
                              undefined,
                            ]
                          }
                        >
                          <View
                            name="wallet"
                            style={
                              Array [
                                Object {
                                  "color": "#007aff",
                                  "fontSize": 24,
                                },
                                undefined,
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "justifyContent": "space-between",
                                "width": "100%",
                              },
                              undefined,
                            ]
                          }
                          type="ACTION"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "flex-start",
                                  "flexBasis": 0,
                                  "flexDirection": "column",
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "justifyContent": "center",
                                  "minHeight": 54,
                                },
                                Object {
                                  "flexGrow": 1,
                                },
                              ]
                            }
                            type="ACTION"
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                medium={true}
                                style={
                                  Array [
                                    Object {
                                      "color": "#0A1427",
                                      "fontFamily": "EuclidCircularB-Regular",
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                      "textAlignVertical": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                button.buyWithCardOrApplePay
                              </Text>
                            </View>
                          </View>
                          <View
                            rightColumn={true}
                            style={
                              Array [
                                Object {
                                  "alignItems": "flex-end",
                                  "flexDirection": "column",
                                  "justifyContent": "center",
                                  "marginLeft": 10,
                                  "minHeight": 54,
                                },
                                Object {
                                  "maxWidth": "50%",
                                },
                              ]
                            }
                            type="ACTION"
                          >
                            <View
                              style={
                                Array [
                                  undefined,
                                  Object {
                                    "flexWrap": "wrap",
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "flexDirection": "column",
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "opacity": 1,
                          "paddingBottom": 5,
                          "paddingLeft": 14,
                          "paddingRight": 14,
                          "paddingTop": 5,
                          "width": "100%",
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "justifyContent": "center",
                              "paddingRight": 12,
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          diameter={48}
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#EBF0F6",
                                "borderColor": "#EBF0F6",
                                "borderRadius": 24,
                                "borderWidth": 0,
                                "height": 48,
                                "justifyContent": "center",
                                "overflow": "hidden",
                                "textAlign": "center",
                                "width": 48,
                              },
                              undefined,
                            ]
                          }
                        >
                          <View
                            name="qrDetailed"
                            style={
                              Array [
                                Object {
                                  "color": "#007aff",
                                  "fontSize": 24,
                                },
                                undefined,
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "justifyContent": "space-between",
                                "width": "100%",
                              },
                              undefined,
                            ]
                          }
                          type="ACTION"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "flex-start",
                                  "flexBasis": 0,
                                  "flexDirection": "column",
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "justifyContent": "center",
                                  "minHeight": 54,
                                },
                                Object {
                                  "flexGrow": 1,
                                },
                              ]
                            }
                            type="ACTION"
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <Text
                                medium={true}
                                style={
                                  Array [
                                    Object {
                                      "color": "#0A1427",
                                      "fontFamily": "EuclidCircularB-Regular",
                                      "fontSize": 16,
                                      "lineHeight": 24,
                                      "textAlignVertical": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                button.sendFromAnotherWallet
                              </Text>
                            </View>
                          </View>
                          <View
                            rightColumn={true}
                            style={
                              Array [
                                Object {
                                  "alignItems": "flex-end",
                                  "flexDirection": "column",
                                  "justifyContent": "center",
                                  "marginLeft": 10,
                                  "minHeight": 54,
                                },
                                Object {
                                  "maxWidth": "50%",
                                },
                              ]
                            }
                            type="ACTION"
                          >
                            <View
                              style={
                                Array [
                                  undefined,
                                  Object {
                                    "flexWrap": "wrap",
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "height": 100,
                      "marginBottom": -100,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            statusBarHeight={42}
            style={
              Object {
                "left": 0,
                "marginTop": 82,
                "paddingBottom": 0,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "position": "absolute",
                "top": 0,
                "width": "100%",
                "zIndex": 1000,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 0,
                }
              }
            />
          </View>
          <Modal
            animationType="fade"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0.4)",
                  "flex": 1,
                  "justifyContent": "flex-end",
                  "opacity": 1,
                }
              }
            >
              <View
                accessible={true}
                focusable={false}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "elevation": 4,
                    "maxHeight": 667,
                    "minHeight": 56,
                    "opacity": 1,
                    "padding": 15,
                  }
                }
              >
                <RCTScrollView
                  data={Array []}
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  style={
                    Array [
                      Object {
                        "marginHorizontal": -15,
                      },
                      Object {
                        "marginTop": 0,
                      },
                    ]
                  }
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View />
                </RCTScrollView>
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </Modal>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      onSwipeComplete={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onSwipeComplete={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={[Function]}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "left": 0,
            "margin": 0,
            "position": "relative",
            "top": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 10,
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeDirection="down"
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            bgColor="#FAFAFA"
            style={
              Array [
                Object {
                  "height": "100%",
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 0,
                    "marginLeft": 0,
                    "marginRight": 0,
                    "marginTop": 0,
                  },
                  Object {
                    "elevation": 2,
                    "marginBottom": 0,
                    "marginTop": -0,
                    "zIndex": 11,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "width": "100%",
                    },
                    Object {
                      "marginTop": -24,
                      "position": "absolute",
                    },
                  ]
                }
              >
                <View
                  accessible={true}
                  focusable={false}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#e0eeff",
                      "borderColor": "#e0eeff",
                      "borderRadius": 24,
                      "borderStyle": "solid",
                      "borderWidth": 0,
                      "display": "flex",
                      "height": 48,
                      "justifyContent": "center",
                      "opacity": 1,
                      "position": "relative",
                      "width": 48,
                    }
                  }
                />
              </View>
            </View>
            <View
              customTheme={
                Object {
                  "borderRadius": "30px",
                  "padding": 0,
                }
              }
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderTopLeftRadius": 30,
                    "borderTopRightRadius": 30,
                    "elevation": 1,
                    "marginHorizontal": 0,
                    "marginTop": "auto",
                    "overflow": "hidden",
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                    "shadowColor": "rgba(0,0,0,.1)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 7,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomWidth": 1,
                    "borderColor": "transparent",
                    "width": "100%",
                  }
                }
              >
                <View
                  androidStatusbarHeight={42}
                  noPaddingTop={true}
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    noHorizontalPadding={false}
                    style={
                      Array [
                        Object {
                          "height": 58,
                          "paddingHorizontal": 16,
                          "paddingVertical": 10,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "width": "100%",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        sideFlex={4}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexBasis": 0,
                              "flexDirection": "row",
                              "flexGrow": 4,
                              "flexShrink": 1,
                              "height": 36,
                              "justifyContent": "flex-start",
                            },
                            Object {},
                          ]
                        }
                      >
                        <View
                          style={Object {}}
                        >
                          <View
                            containerStyle={
                              Object {
                                "marginLeft": 8,
                              }
                            }
                            label="label.erc20TokensOnly"
                            labelStyle={
                              Object {
                                "fontSize": 10,
                              }
                            }
                            primary={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "#007AFF",
                                  "borderRadius": 12,
                                  "paddingBottom": 3,
                                  "paddingLeft": 8,
                                  "paddingRight": 8,
                                  "paddingTop": 3,
                                },
                                Object {
                                  "marginLeft": 8,
                                },
                              ]
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#0A1427",
                                    "fontFamily": "EuclidCircularB-Regular",
                                    "textAlignVertical": "center",
                                  },
                                  Array [
                                    Object {
                                      "color": "#0A1427",
                                      "fontFamily": "EuclidCircularB-Medium",
                                      "textAlignVertical": "center",
                                    },
                                    Array [
                                      Object {
                                        "color": "#FCFDFF",
                                        "fontSize": 8,
                                      },
                                      Object {
                                        "fontSize": 10,
                                      },
                                    ],
                                  ],
                                ]
                              }
                            >
                              label.erc20TokensOnly
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "alignContent": "center",
                              "alignItems": "center",
                              "flexBasis": 0,
                              "flexDirection": "row",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "flexWrap": "wrap",
                              "height": 36,
                              "justifyContent": "flex-end",
                            },
                            undefined,
                          ]
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "center",
                      "paddingBottom": 60,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    rounded={true}
                    small={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#BD573A",
                          "borderRadius": 8,
                          "justifyContent": "center",
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      small={true}
                      style={
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Regular",
                            "fontSize": 12,
                            "lineHeight": 18,
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "color": "#0A1427",
                              "fontFamily": "EuclidCircularB-Medium",
                              "fontSize": 12,
                              "lineHeight": 18,
                              "textAlignVertical": "center",
                            },
                            Array [
                              Object {
                                "color": "#FCFDFF",
                                "fontSize": 14,
                                "lineHeight": 22,
                              },
                              undefined,
                            ],
                          ],
                        ]
                      }
                    >
                      paragraph.doNotSendRealEthOrTokens
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "overflow": "hidden",
                          "padding": 10,
                        }
                      }
                    />
                    <Text
                      onPress={[Function]}
                      style={
                        Array [
                          Object {
                            "color": "#0A1427",
                            "fontFamily": "EuclidCircularB-Regular",
                            "textAlignVertical": "center",
                          },
                          Array [
                            Object {
                              "fontSize": 14,
                              "lineHeight": 22,
                              "marginBottom": 8,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "marginTop": 8,
                            },
                            undefined,
                          ],
                        ]
                      }
                    />
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                          "marginBottom": 12,
                          "marginTop": 12,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "auto",
                          "backgroundColor": "#007AFF",
                          "borderRadius": 6,
                          "flexDirection": "row",
                          "height": 52,
                          "justifyContent": "center",
                          "marginBottom": 0,
                          "marginLeft": 0,
                          "marginRight": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingBottom": 0,
                          "paddingLeft": 20,
                          "paddingRight": 20,
                          "paddingTop": 0,
                          "width": "100%",
                        }
                      }
                    >
                      <Text
                        small={false}
                        style={
                          Array [
                            Object {
                              "color": "#0A1427",
                              "fontFamily": "EuclidCircularB-Regular",
                              "fontSize": 12,
                              "lineHeight": 18,
                              "textAlignVertical": "center",
                            },
                            Array [
                              Object {
                                "color": "#FFFFFF",
                                "fontSize": 16,
                                "lineHeight": 16,
                                "marginTop": 2.88,
                                "textAlign": "center",
                              },
                              Object {
                                "paddingTop": 4,
                              },
                            ],
                          ]
                        }
                        variant="default"
                      >
                        button.shareAddress
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "height": 100,
                      "marginBottom": -100,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            statusBarHeight={42}
            style={
              Object {
                "left": 0,
                "marginTop": 82,
                "paddingBottom": 0,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "position": "absolute",
                "top": 0,
                "width": "100%",
                "zIndex": 1000,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 0,
                }
              }
            />
          </View>
          <Modal
            animationType="fade"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0.4)",
                  "flex": 1,
                  "justifyContent": "flex-end",
                  "opacity": 1,
                }
              }
            >
              <View
                accessible={true}
                focusable={false}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "elevation": 4,
                    "maxHeight": 667,
                    "minHeight": 56,
                    "opacity": 1,
                    "padding": 15,
                  }
                }
              >
                <RCTScrollView
                  data={Array []}
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  style={
                    Array [
                      Object {
                        "marginHorizontal": -15,
                      },
                      Object {
                        "marginTop": 0,
                      },
                    ]
                  }
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View />
                </RCTScrollView>
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </Modal>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      onSwipeComplete={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onSwipeComplete={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={[Function]}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "left": 0,
            "margin": 0,
            "position": "relative",
            "top": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "zIndex": 10,
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeDirection="down"
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            bgColor="#FAFAFA"
            style={
              Array [
                Object {
                  "height": "100%",
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                  undefined,
                ]
              }
            />
            <View
              customTheme={
                Object {
                  "borderRadius": "30px",
                  "padding": "0 16px",
                }
              }
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderTopLeftRadius": 30,
                    "borderTopRightRadius": 30,
                    "elevation": 1,
                    "marginHorizontal": 0,
                    "marginTop": "auto",
                    "overflow": "hidden",
                    "paddingBottom": 0,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 0,
                    "shadowColor": "rgba(0,0,0,.1)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 7,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomWidth": 1,
                    "borderColor": "transparent",
                    "width": "100%",
                  }
                }
              >
                <View
                  androidStatusbarHeight={42}
                  noPaddingTop={true}
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    noHorizontalPadding={true}
                    style={
                      Array [
                        Object {
                          "height": 58,
                          "paddingVertical": 10,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "width": "100%",
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        sideFlex={4}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexBasis": 0,
                              "flexDirection": "row",
                              "flexGrow": 4,
                              "flexShrink": 1,
                              "height": 36,
                              "justifyContent": "flex-start",
                            },
                            Object {},
                          ]
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "alignContent": "center",
                              "alignItems": "center",
                              "flexBasis": 0,
                              "flexDirection": "row",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "flexWrap": "wrap",
                              "height": 36,
                              "justifyContent": "flex-end",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": -20,
                              "marginLeft": -12,
                              "marginRight": -20,
                              "marginTop": -20,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            isTVSelectable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "alignSelf": "center",
                                "justifyContent": "center",
                                "opacity": 1,
                                "paddingBottom": 20,
                                "paddingLeft": 20,
                                "paddingRight": 20,
                                "paddingTop": 20,
                                "position": "relative",
                              }
                            }
                          >
                            <View
                              name="close"
                              style={
                                Object {
                                  "color": "#0A1427",
                                  "fontSize": 14,
                                  "marginBottom": undefined,
                                  "marginLeft": undefined,
                                  "marginRight": undefined,
                                  "marginTop": undefined,
                                  "paddingTop": 0,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  light={true}
                  small={true}
                  style={
                    Array [
                      Object {
                        "color": "#0A1427",
                        "fontFamily": "EuclidCircularB-Regular",
                        "fontSize": 12,
                        "lineHeight": 18,
                        "textAlignVertical": "center",
                      },
                      Array [
                        Object {
                          "color": "#818EB3",
                          "flexWrap": "wrap",
                          "fontSize": 16,
                          "lineHeight": 24,
                          "marginBottom": 5,
                          "textAlign": "left",
                        },
                        Array [
                          Object {
                            "paddingBottom": 80,
                          },
                          undefined,
                        ],
                      ],
                    ]
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "height": 100,
                      "marginBottom": -100,
                      "width": "100%",
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            statusBarHeight={42}
            style={
              Object {
                "left": 0,
                "marginTop": 82,
                "paddingBottom": 0,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "position": "absolute",
                "top": 0,
                "width": "100%",
                "zIndex": 1000,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 0,
                }
              }
            />
          </View>
          <Modal
            animationType="fade"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0.4)",
                  "flex": 1,
                  "justifyContent": "flex-end",
                  "opacity": 1,
                }
              }
            >
              <View
                accessible={true}
                focusable={false}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "elevation": 4,
                    "maxHeight": 667,
                    "minHeight": 56,
                    "opacity": 1,
                    "padding": 15,
                  }
                }
              >
                <RCTScrollView
                  data={Array []}
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  style={
                    Array [
                      Object {
                        "marginHorizontal": -15,
                      },
                      Object {
                        "marginTop": 0,
                      },
                    ]
                  }
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View />
                </RCTScrollView>
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;
